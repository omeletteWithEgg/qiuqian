
<style lang="less" scoped>
@text-grey: #9F9F9F;
@btn-primary-color:#FF6F61;
.content-wrap{
    position: absolute;
    left:0;
    right: 0;
    top:27rpx;
}

.form-section{
  margin-bottom:20rpx;
  position: relative;
  .section{
    position: relative;
  }
  .input-row-right{
      .input-row{
        border-top:0
      }
  }

  .btn-mini{
    width:84rpx;
    height:36rpx;
    padding:0px;
    line-height: 36rpx;
    display: inline-block;
    border-radius: 24rpx;
    margin-left:20rpx;
    &.btn-outline{
      background: #fff;
      border:1rpx solid #707070;
      color:#808080
    }
  }
  .icon-check{
    height: 4rpx;
  }
  .iconfont.icon-xuanzhong{
    font-size:48rpx;
    color:@btn-primary-color;
    &.unchecked{
      color:@text-grey
    }
  }
  .label-right-text{
    padding-right:40rpx;
    font-size:24rpx;

  }

  .tag-row.input-row{
    padding:0 20rpx;
    line-height: 74rpx;
    min-height: 80rpx;
  }
  .icon-jiantou{
    position: absolute;
    right:40rpx;
    top:2rpx;
    font-size:40rpx;
  }
  .icon-jiantou3{
    font-size: 44rpx
  }
  .icon-bangzhu{
      font-size:36rpx;
        vertical-align:middle;
        color:#A2A2A2;
        margin-left:10rpx;
  }
}
.form-row{
    padding:20rpx 40rpx;
    background:#fff;
    line-height:50rpx;
    &.flex-form{
        flex-wrap:wrap;
    }
    .btn-mini{
        width:100rpx;
        height: 40rpx;
        line-height: 40rpx;
        margin:0rpx 0rpx 10rpx 0rpx;
       
    }

}
    .set-text{
        padding: 0rpx 40rpx 20rpx;
        color:#808080;
        font-size:28rpx;
    }
  .section-title{
    font-size:28rpx;
    color:#000
  }

.btn-large{
  margin:10rpx auto 60rpx auto
}
.sub-text.rules{
  display:block;
    margin:60rpx 0px 80rrpx 0px;
}
</style>
<template>
<scroll-view scroll-y="true" style="height:100%">
    <form class="content-wrap" bindsubmit="save" report-submit='true'>
            <view class="form-section input-row  flex-form" >
                <view class="section-title">修改头像</view>
                <view class="img-wrap"  @tap="changeAvatar">
                <image  style="width:80rpx;height:80rpx;border-radius:100%;display:block;margin-right:50rpx"  mode="scaleToFill" src="{{avatar[0]}}" > </image>
                  <view class=" iconfont icon-jiantou"></view>
                </view>
              </view>
            <view class="form-section">
            <view class="section input-row  flex-form" >
              <view class="section-title">签到名字</view>
              <view class="input-row-right">
                    <input name="SignName" value="{{info.SignName}}" class="input-row" placeholder="输入签到的名字" bindinput="fillSignName" />
              </view>
          </view>
            <!-- <view class="section input-row  flex-form" >
              <view class="section-title">电话</view>
              <view class="input-row-right">
                    <input name="phoneNum" value="{{phoneNum}}" class="input-row" placeholder="输入电话" bindinput="fillphoneNum" />
              </view>
          </view> -->
          </view>
          <view class="set-text">设置签到提醒（必须坚持签到才会收到提醒哦）</view>
           <view class="form-section  " >
            <view class="section input-row flex-form">

              <view class="section-title">是否开启签到提醒</view>
              <view>
                  <view class=" iconfont  {{chooseIcon[0].checked?'icon-xuanzhong':'icon-circle'}}" @tap="checkRadio" data-id="ifSignNotice" data-checked="{{chooseIcon[0].checked}}"></view>
              </view>
            </view>
            <view class="section input-row flex-form" wx:if="{{chooseIcon[0].checked}}">
                <view class="section-title">每天提醒时间</view>
                <view >
                    <picker
                    mode="time"
                    value="{{info.RemindTime}}"
                    start="09:01"
                    end="21:01"
                    bindchange="bindTimeChange">
                        <view class="label-right-text">{{info.RemindTime?info.RemindTime:''}}</view>
                        <view class=" iconfont icon-jiantou"></view>
                    </picker>
                </view>
            </view>
            <view class="section " wx:if="{{chooseIcon[0].checked}}">
                <view class="section-title  input-row">设置重复提醒</view>
                <view class="form-row flex-form">
                  <button @tap="chooseNoticeDate"  wx:for="{{repeatNum}}" class="btn-mini {{item.btnStatus}}" data-id="{{item.id}}">{{item.text}}</button>
                </view>
              <view class=" form-row section-title" @tap="openNotice">关注「每日膳膳签」公众号接收提醒，点击查看</view>
            </view>
          </view>
           <view class="form-section input-row flex-form">
               <view class="section-title">是否开启评论消息提醒</view>
              <view>
                  <view class=" iconfont  {{chooseIcon[1].checked?'icon-xuanzhong':'icon-circle'}}" @tap="checkRadio" data-id="ifCommentNotice" data-checked="{{chooseIcon[1].checked}}"></view>
              </view>
               
           </view>
       <!-- </view> -->
        <!-- </view> -->
      <view class="sub-text rules">确认即表示已同意《微信公众平台服务协议》</view>
       <button class="btn-large" form-type="submit">保存</button>
    </form>
    
</scroll-view>
</template>

<script>
  import wepy from 'wepy'
   import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'
  

  export default class editInfo extends wepy.page {
     config = {
      navigationBarTitleText: '修改设置'
    }
   data = {
     info:{},
     userInfo:{},
     callTime:'',
    //  signName:'',
     avatar:[],
    //  ifSignNotice:true,
    //  ifCommentNotice:true,
    chooseIcon:[{
      'checked':true,
      'name':"ifSignNotice"
     },{
      'checked':true,
      'name':'ifCommentNotice'
     }],
     selectedReaptNum:[],
     repeatNum:[
       {'text':"星期一",'id':'1','btnStatus':'btn-outline'},
       {'text':"星期二",'id':"2",'btnStatus':'btn-outline'},
       {'text':"星期三",'id':"3",'btnStatus':'btn-outline'},
       {'text':"星期四",'id':"4",'btnStatus':'btn-outline'},
       {'text':"星期五",'id':"5",'btnStatus':'btn-outline'},
       {'text':"星期六",'id':"6",'btnStatus':'btn-outline'},
       {'text':"星期日",'id':"0",'btnStatus':'btn-outline'}
     ],
   }
   methods = {
       openNotice(){
          this.$navigate('./openNotice')
       },
        checkRadio(e){
        const dataId = e.currentTarget.dataset.id;
        this.chooseIcon.forEach((i)=>{
          if(i.name==dataId){
            i.checked = !i.checked;
          }
        })
     },
     async save(form){
       console.log(JSON.stringify(form)+'-----表单')
       let params={
         OpenID:Auth.getConfig("openId"),
         SignName:this.info.SignName,
         RemindSign:this.chooseIcon[0].checked,
         RemindTime:this.info.RemindTime,
         RemindDay:this.selectedReaptNum.join(''),
         RemindComment:this.chooseIcon[1].checked
       };
        await Config.userSetting(params);
        console.log(this.userInfo.avatarUrl)
        console.log(this.avatar[0])
        if(this.userInfo.avatarUrl!=this.avatar[0]){
          let that=this;
          wx.uploadFile({
            url:Config.baseUrl+Auth.getConfig('openId'),
            filePath: that.avatar[0],
            name: 'files[]',
            success: (res) => {
              const data = JSON.parse(res.data);
               that.userInfo.avatarUrl=data;
               Auth.setConfig('userInfo',JSON.stringify(that.userInfo));
               Auth.setConfig('signName',that.info.SignName);
               Auth.setConfig('avatarUrl',data);
               that.$apply();
            }
          });
        }
        setTimeout(()=>{
          Tips.toast('修改成功');
           wx.switchTab({
             url: '/pages/useCenter',
             // success:function(){
             //   var pages = getCurrentPages().pop();
             //   // pages.onLoad()
             // }
           })
        },500)
      
     },

     changeAvatar(event){
      let itemList= ['拍照', '相册上传'];
      const that=this;
       wx.showActionSheet({
        itemList: itemList,
         success(res) {
          // const url= 'http://www.qct-qiuqian.com:9999/qiuqian/user/img?OpenID='+Auth.getConfig('openId');
         
          if(res.tapIndex==1){
            Tips.chooseImage('1',['album']).then(async (res)=>{
              that.avatar=res.tempFilePaths;
              that.changeAvatar=true;
              that.$apply(); 
            }).catch(err => {
              console.info( 'actionSheet---error---'+err );
            });
              
            }else if(res.tapIndex==0){
              Tips.chooseImage('1',['album']).then(async (res)=>{
                that.avatar = res.tempFilePaths;
                 that.changeAvatar=true;
                that.$apply();
              }).catch(err => {
                console.info( 'actionSheet---error---'+err );
              });
    
            };
        },
        fail(res) {
          console.log("actionSheet--error"+res.errMsg);
          return
        }
      })
    
    },
     
        
      bindTimeChange(e) {
        this.info.RemindTime=e.detail.value
      },
      fillSignName(e) {
        this.info.SignName=e.detail.value
      },
      chooseNoticeDate(event){
        this.initRemindDay(event.currentTarget.dataset.id)
      }
     
   }
  initRemindDay(value){
    this.repeatNum.forEach((item,) => {
      if(item.id==value){
          if( item.btnStatus=='btn-outline'){
            item.btnStatus='';
            this.selectedReaptNum.push(item.id)
          }else{
            item.btnStatus='btn-outline';
            this.selectedReaptNum.splice(this.selectedReaptNum.findIndex(sbitem=>sbitem==value),1)
          }
        }
      });
    }
    async onLoad(){
      this.userInfo = JSON.parse(Auth.getConfig("userInfo"));
        this.avatar[0]=Auth.getConfig("avatarUrl");
       let params={
           'OpenID':Auth.getConfig("openId")
          
       }
       this.info=await Config.getUserSetting(params);
      if(this.info.RemindSign==true){
        this.chooseIcon[0].checked=true
      }else{
        this.chooseIcon[0].checked=false
      };
      if(this.info.RemindComment==true){
        this.chooseIcon[1].checked=true
      }else{
        this.chooseIcon[1].checked=false
      };
      //重复提醒时间
      if(this.info.RemindDay){
        this.selectedReaptNum=this.info.RemindDay.split('');
        this.selectedReaptNum.forEach((item)=>{
          this.repeatNum.forEach(sbItem => {
            if(sbItem.id==item){
              sbItem.btnStatus='';
            }
          });
        })
      }      
       this.$apply()
    }

  }
</script>
