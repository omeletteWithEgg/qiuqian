<style lang="less" scoped>
@btn-primary-color:#FF6F61;
.view-top{
    position: relative;
    .img-text{
        color:#fff;
        position: absolute;
        bottom:45rpx;
        right: 40rpx;
        left: 40rpx;
        .title{
            font-size:32rpx;
            line-height:70rpx;
        }
        .date{
            font-size:10px;
            line-height: 24rpx;
            font-size: 24rpx;
            display: block;
        }
    }
}
.view-middle{
    font-size:24rpx;
    color:#808080;
    background:rgba(247,247,247,1);
    .content-title{
        padding:20rpx 40rpx ;
        border-bottom:1rpx solid #e2e2e2;
        color:#000;
        .user{
            display: inline-block;
        }
        .iconfont{
            display: inline-block;
            vertical-align: sub;
            font-size:44rpx;
            padding-right:20rpx;
        }
    }
    .content-rules{
        padding: 40rpx;
        border-bottom:1rpx solid rgba(226,226,226,1);
        .sub-content-text{
            line-height: 46rpx;
        }
        .iconfont{
            display: inline-block;
            vertical-align: sub;
            font-size:44rpx;
            padding-right:20rpx;
        }
        .title{
            color:#000;
        }
    }
    .content-btns{
        padding: 40rpx;
        >view{
           width:110rpx;
            height:95rpx;
            border:1rpx solid rgba(217,217,217,1);
            border-radius:12rpx;
            text-align:center;
            .iconfont{
                margin-top:16rpx;
                
            }
            .icon-shezhi1,.icon-xiaoxi{
                margin-top:12rpx;
                font-size:38rpx;
            }
            .icon-rili{
              font-size:34rpx
            }
        }

    }
}
.tag{
    color:#BFBFBF;
    display: inline-block;
    font-size:10px;
    padding:2rpx 12rpx;
    margin-left:20rpx;
    border:1rpx solid rgba(191,191,191,1);
    border-radius:24rpx;
    &.bordered{
        border:1rpx solid @btn-primary-color;
         color:@btn-primary-color;
    }
}
.set-info{
    height:140rpx;
    background:rgba(240,240,240,1);
    position: relative;
    padding:0rpx 40rpx 0rpx 118rpx;
    margin-top:50rpx;
    .iconfont.icon-xiaoxi{
        color:#FFAF19;
        font-size:66rpx;
        position:absolute;
        left:40rpx;
        top:50%;
        margin-top:-38rpx;

    }
    .title{
        font-size:14px;
        color:#000
    }
    .subtitle{
        font-size:20rpx;
        line-height:48rpx;
        color:#808080;
    }
}
.view-bottom{
    background: #F7F7F7;
    .top-content{
      padding:35rpx 40rpx;
      color:#000;
      font-size:24rpx;
      border-bottom:1rpx solid #e2e2e2;
    }
    @keyframes spin {
      0% {
        opacity: .2;
        -webkit-transform: scale(1);
        transform: scale(1)
      }
      50% {
        opacity: 1;
        -webkit-transform: scale(1.1);
        transform: scale(1.1)
      }
      100% {
        opacity: .2;
        -webkit-transform: scale(1);
        transform: scale(1)
      }
    }
   .moment-list{
      
       padding: 0px 0px 20rpx 58rpx ;
       .flex-form.audio-list{
           justify-content:inherit
       }
       .audios{
            height:80rpx;
            width:30%;
            margin-right:3%;
             line-height: 80rpx;
            background:@btn-primary-color;
            border-radius:12rpx;
             color:#fff;
             margin-bottom:8rpx;
             position: relative;
             :last-child{
                 margin-right:0
             }
            .iconfont{
              position: absolute;
              left:18rpx;
              &.animation{
                animation: spin 1s linear infinite;
              }
            }
            .text{
                position: absolute;
                left:59rpx;
                font-size: 24rpx;
            }
        }
   }
    .middle-content{
       color: #505050;
       padding:0px 40rpx 0rpx 40rpx;
       line-height: 40rpx;
       font-size:24rpx;
       >.flex-form{
           padding-top:14rpx;
           border-top:1rpx solid #efefef;
       }
       .flex-form.img-list{
           flex-wrap: wrap;
       }
       .img-item{
           margin-bottom:12rpx;
           flex:1;
           height: 190rpx;
           min-width:165rpx;
            margin-right:10rpx;
           &:nth-child(3n),&:last-child{
               margin-right:0px
           }
           &.first-child{
              flex-basis:100%
           }
       }
       .no-data{
         padding:40rpx 0;
       }
    }
}
.content{
 .sub-title{
        padding:0rpx 40rpx 0rpx 40rpx;
    }
}
.content-list {
    background:#fff;
    border-radius: 15rpx;
    .sub-title{
        padding:0rpx 40rpx 20rpx 40rpx;
    }
     input{
        width:90%;
        height:72rpx;
          text-indent:15rpx;
          color:#000;
          font-size:14px;
          box-sizing:border-box;
        display: inline-block;
        border:1rpx solid rgba(149,152,154,1);
         border-radius: 12rpx;
      }
    .list-item{
        height:99rpx;
        line-height:99rpx;
        font-size:30rpx;
        border:none;
        color:#333;
        border-bottom: 1rpx solid #eaeaea;
        &:last-child{
            border-bottom:0rpx;
        }
    }
}
</style>
<template>
<view style="height:100%">
    <scroll-view scroll-y="true" style="height:100%" bindscrolltolower="scrollHandler">
    <view class="view-top">
        <image src="{{groupInfo.BackgroundURL}}" mode="aspectFill" style="width:100%;height:360rpx"></image>
        <view class="img-text ">
            <text class="title">{{groupInfo.GroupTitle}}</text>
            <view class="date">{{groupInfo.BeginDate}}~{{groupInfo.EndDate}}<view class="pull-right">共{{groupInfo.UsersNum}}人</view></view>
        </view>
    </view>
    <view class="view-middle">
        <view class="content-title flex-form">
            <view>
                <view class="iconfont icon-wode"></view><view class="user">{{groupInfo.NickName}}</view><view class="tag">发起人</view> 
            </view>
            <view class="comment-btn" @tap="userManamgeFunc" wx:if="{{groupInfo.IsManager===true||groupInfo.OpenID==creater}}">成员管理</view>
            <view class="comment-btn" @tap="goCommet" wx:else>留言</view>
        </view>
        <view class="content-rules">
            <view class="title"> <view class="iconfont icon-jinggao"></view>签到规则</view>
            <view class="sub-content-text">
                <view>*签到日期：{{groupInfo.BeginDate}} 至 {{groupInfo.EndDate}}</view>
                <view>*每日可签到时间：{{groupInfo.BeginTime}} 至 {{groupInfo.EndTime}}</view>
                <view>*签到规则：{{!groupInfo.SignRule||groupInfo.SignRule=='null'?'无':groupInfo.SignRule}}</view>
            
            </view>
        </view>
        <view class="content-btns flex-form">
            <view wx:for="{{btnList}}" @tap="btnClickFunc" data-url="{{item.url}}"><view class="iconfont {{item.icon}}"></view><text>{{item.text}}</text></view>
        </view>
        <button wx:if="{{ifSigned=='none'}}" animation="{{animationData}}" class="btn btn-large" @tap="joinSign" disabled="{{status=='已结束'}}">{{status=='已结束'?'已结束':'加入签到'}}</button>
        <button wx:if="{{ifSigned===true}}" animation="{{animationData}}" class="btn btn-large" @tap="joinSign" disabled="{{status=='已结束'}}">{{status=='已结束'?'已结束':'参与签到(已签'+signNum+'次/共'+groupInfo.SignTimes+'次)'}}</button>
        <button wx:if="{{ifSigned===false}}" class="btn btn-large"  disabled>今日已签到(已签{{signNum}}次/共{{groupInfo.SignTimes?groupInfo.SignTimes:''}}次)</button>
    </view>
    <view class="set-info flex-form">
        <view>
            <view class="iconfont icon-xiaoxi "></view>
            <view class="title ">开启签到提醒</view>
            <view class="subtitle ">第一时间接受签到提醒，不用担心错过签到啦！</view>
        </view>
        <view class="btn-outline-mini" @tap="setMessage">去开启</view>
    </view>
    <view class="view-bottom">
        <view class="top-content flex-form">
            <view><text>动态</text>
            <text class="tag {{filterClass[0]}}"  @tap="selectFilter" data-name="all">全部</text>
            <text class="tag {{filterClass[1]}}"  @tap="selectFilter" data-name="today">今天</text>
            <picker bindchange="bindPickerChange"  
            style="display:inline-block"
                mode="date"
                start="new Date()"
                end="2030-09-01" value="{{dataValue}}">
                <view class="picker"></view>
               <text class="tag {{filterClass[2]}}"  @tap="selectFilter" data-name="date">{{dataValue}}</text>
              </picker>
            </view>
             <text @tap="changeTurn" >{{currentTurn}}</text>
        </view>
        <view class="middle-content" wx:if="{{myMomentsList.length>0}}">
          <view wx:if="{{AllCanSee}}">
          <repeat for="{{myMomentsList}}" key="index" index="index" item="item"  >
                <Comments 
                :content.sync="item" 
                :list="moreBtnList"
                :commentsBtnList.sync="commentsBtnList" 
               @favoriteFunc.user="favoriteFunc"
               @listBtnClickFunc.user="listBtnClickFunc"
               @blackListFunc.user="blackListFunc"
               @toTopFunc.user="toTopFunc"
               @setScore.user="scoreConfirmFunc"
               @deleteMsgFunc.user="deleteMsgFunc"
               @previewImg.user="previewImg"
               @audioPlay.user="audioPlay"
               @openUserRecords.user="openUserRecords"
                @deleteItem.user="deleteMsg" >
                </Comments>
            </repeat>
            <view class='sub-title' wx:if="{{loadMore}}">{{loadMoreText}}</view>
            </view>
           <view class="no-data" wx:else>该小组设置了签到不对所有人开放，仅小组成员可见</view>

        </view>
            <view wx:else class="sub-title no-data">暂无数据</view>
    </view>
    <tokenModal lefttext="取消"
        :modalshow.sync="tokenModalShow"
        modalStyle="top:35%;bottom:30%"
        righttext="确认"
        modaltitle="请输入签到口令"
        @confirmFunc.user="signTokenClick" >
         <view slot="content" class="content-list">
            <input type="text" value="{{signToken}}" bindblur="inputSignToken"></input>
            <view class="sub-title" style="padding-top:20rpx">联系小组创建者{{groupInfo.NickName}}获取签到口令</view>
          </view>
    </tokenModal>
    <modal lefttext="取消"
        :modalshow.sync="joinModal"
        modalStyle="top:35%;bottom:30%"
        righttext="确认"
        modaltitle="加入小组"
        @confirmFunc.user="openSignInfo" >
        <view slot="content" class="content">
           <text class="sub-title">还未加入该小组，无法进行签到，请先加入小组</text>
         </view>
    </modal> 
    <!-- <moneyModal lefttext="取消"
      :modalshow.sync="openSignInfo"
      modalStyle="top:35%;bottom:40%"
      righttext="确认"
      modaltitle="该小组为收费打卡小组"
      @confirmFunc.user="payFunc" >
      <view slot="content" class="content">
         <text class="sub-title">请支付{{groupInfo.Money}}元，支付完成后即可签到</text>
       </view>
    </moneyModal> -->
    
    <turnModel 
        :modalshow.sync="turnModelShow"
        titleshow="false"
        :btnshow="btnshow"
         modalStyle="top:45%">
        <view slot="content" class="content-list">
            <view class="list-item" @tap="chooseTurn" data-text="time" data-content="按时间排序">按时间排序</view>
            <view  class="list-item"  @tap="chooseTurn" data-text="praise" data-content="按点赞数排序">按点赞数排序</view>
            <view  class="list-item"  @tap="chooseTurn" data-text="id" data-content="按成员编号排序">按成员编号排序</view>
        </view>
    </turnModel>
    <shareModel 
      :modalshow.sync="shareModelShow"
      titleshow="false"
      :btnshow="btnshow"
        modalStyle="top:45%">
        <view slot="content" class="content-list">
          <button class="list-item" wx:if="{{groupInfo.CanTransmit}}" open-type="share" plain='true' data-text="转发到微信群">转发到微信群</button>
          <button class="list-item" wx:else  data-text="转发到微信群" @tap="transmit"  plain='true'>转发到微信群</button>
          <button  class="list-item"  wx:if="{{groupInfo.CanTransmit}}" open-type="share" plain='true'  data-text="转发给好友">转发给好友</button>
          <button  class="list-item" wx:else  data-text="转发给好友" @tap="transmit" plain='true' >转发给好友</button>
          <view  class="list-item"  @tap="chooseShare" data-text="生成二维码">生成二维码</view>
          <view  class="list-item"  @tap="chooseShare" data-text="生成分享图">生成分享图</view>
        </view>
    </shareModel>
  </scroll-view>
</view>
</template>

<script>
  import wepy from 'wepy'
  import modal from '../components/modal'
  import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'
  import Comments from '../components/commets'
  
  export default class addNewSign extends wepy.page {
     config = {
      navigationBarTitleText: '签到详情'
    }

    components = {
      modal:modal,
      tokenModal:modal,
      turnModel:modal,
      // moneyModal:modal,
      shareModel:modal,
      Comments:Comments
    }

   data = {
    tokenModalShow:false,
    joinModal:false,
    AllCanSee:true,
    ifSigned:'none',
    btnshow:false,
    loadMoreText:'加载中...',
    // moneyModalShow:false,
    loadMore:false,
    status:'',
    signToken:'',
    hasMore:true,
    isManager:false,
    shareModelShow:false,
    ifCanSign:false,
    signNum:'',//是否加入签到小组的标识
    signTimes:'',
    pageIndex:1,
    currentTurn:'按时间排序',
    currentTurnSort:'',
    currentDateValue:'',
    turnModelShow:false,
    dataValue:"选择日期",
    optionId:'',
    creater:'',
    currentIndex:0,
    optionManager:'',
    animationData:'',
    moreBtnList:['删除记录','设为置顶','加入黑名单'],
    innerAudioContext:{},
    groupInfo:{},
     filterClass:['bordered','',''],
     myMomentsList:[],
     btnList:[{
      'icon':'icon-xiaoxi',
      'text':'通知',
      'url':'./noticeList'
     },{
      'icon':'icon-paixingbang',
      'text':'排行榜',
       'url':'./rankingList'
     },{
      'icon':'icon-shezhi1',
      'text':'设置',
       'url':'./settings'
     },{
      'icon':'icon-rili',
      'text':'我的记录',
       'url':'./myRecords'
     },{
      'icon':'icon-xinfeng',
      'text':'转发',
       'url':''
     }],
     commentsBtnList:[{
      'icon':'icon-liuyan',
      'text':'评论',
        'url':'./postCommet'
      
     },{
      'icon':'icon-zhuanfa',
      'text':'分享',
        'url':'./shareImage',
       'favorite':false
     },{
      'icon':'icon-detail',
      'text':'详情',
        'url':'./commentDetail'

     }]
   }
   methods = {
    btnClickFunc(e){
      const url = e.currentTarget.dataset.url;
      let isManager=this.isManager||this.creater==this.groupInfo.OpenID;
      if(this.creater==this.groupInfo.OpenID&&url=='./settings'){//创建者
         this.$navigate(url+'?id='+this.optionId+'&isManager='+isManager+'&signNum='+this.signNum+'&groupInfo='+JSON.stringify(this.groupInfo))
      }else{
        if((this.signNum=='-1'&&url=='./myRecords')||(this.signNum=='-1'&&url=='./settings')){//签到过期
          if(this.status=='已结束'){Tips.toast('活动已结束','none');return
          }else{
            this.joinModal=true;
            this.$apply();
          }
        }else{//签到正在报名中
          if(url==''){
              this.shareModelShow=true
          }else{
             this.$navigate(url+'?id='+this.optionId+'&isManager='+isManager+'&signNum='+this.signNum+'&groupInfo='+JSON.stringify(this.groupInfo)
             +'&openId='+this.creater)
          }
        }
      }
    },
    async blackListFunc(id){
      let res=await Config.blackList('group/BlackList?GroupID='+this.optionId+'&OpenID='+id.OpenID+'&Operate=1&AdminOpenID='+this.creater);
       this.$broadcast('blackListShowChange');
      Tips.toast(res,'none');
       this.loadList(this.currentDateValue,this.currentTurnSort);
    },
    listBtnClickFunc(id){//评论回复分享
      if(this.signNum=='-1'&&this.commentsBtnList[id.id].url=='./postCommet'){
          this.joinModal=true
      }else{
        let date=this.groupInfo.BeginDate+'至'+this.groupInfo.EndDate;
        this.currentIndex = this.myMomentsList.findIndex(item=>item.SignID==id.msgId);

        this.$root.$navigate(this.commentsBtnList[id.id].url+'?msg='+JSON.stringify(id.msg)+"&type=1&groupInfo="+JSON.stringify(this.myMomentsList[this.currentIndex])+"&id="+this.optionId+'&bgImg='+this.groupInfo.BackgroundURL+'&name='+this.groupInfo.NickName+'&title='+this.groupInfo.GroupTitle+'&date='+date+'&isManager='+this.groupInfo.IsManager);
      }
    }, 
    async toTopFunc(id){
       let currentIndex=this.myMomentsList.findIndex(item=>item.SignID==id.SignID);
        let currentItem=this.myMomentsList[currentIndex];
     if(this.signNum=='-1'&&this.commentsBtnList[id.id].url=='./postCommet'){
          this.joinModal=true
      }else{
        let Operate,toastText;
        if(id.IsTop==true){
          Operate=2;
           this.topList-=1;
        }else{
          Operate=1;
          toastText='置顶成功';
        }
        await Config.toTop('?SignID='+id.SignID+'&GroupID='+this.optionId+'&Operate='+Operate+'&AdminOpenID='+this.creater);
         this.loadList(this.currentDateValue,this.currentTurnSort);
        this.$broadcast('toTop',true);
        this.$apply();
        Tips.toast(toastText);
      }
    },
    async deleteMsg(msg){//删除签到
      await Config.deleteMessage('?SignID='+msg.SignID+'&GroupID='+this.optionId+'&OpenID='+msg.OpenID+'&AdminOpenID='+this.creater);//openid是被删除者   adminopenid是删除者
      this.myMomentsList.splice(this.myMomentsList.findIndex(item=>item.SignID==msg.SignID),1);
      this.signNum-=1;
      if(this.ifSigned===false){
        this.ifSigned=true
      }
      this.$apply();
      Tips.toast('删除成功');
    },
    async deleteMsgFunc(msg){//删除评论回复
      let type=msg.type;
      if(type=='1'){//回复
        this.currentIndex = this.myMomentsList.findIndex(item=>item.SignID==msg.signId);
        this.$navigate('./postCommet?id='+this.optionId+'&type=2&msg='+JSON.stringify(msg.msgId)+'&groupInfo='+JSON.stringify(this.myMomentsList[this.currentIndex]))
      }else if(type=='2'){//删除
        await Config.deleteMessage('?SignID='+msg.signId+'&GroupID='+this.optionId+'&OpenID='+msg.openId+'&messageID='+msg.msgId.MessageID+'&AdminOpenID='+this.creater);
        this.myMomentsList.forEach(item=>{
          if(item.SignID==msg.signId){
            console.log(item.Messages.findIndex(sbitem=>sbitem.MessageID==msg.msgId.MessageID))
            item.Messages.splice(item.Messages.findIndex(sbitem=>sbitem.MessageID==msg.msgId.MessageID),1);
             this.$apply();
          }
        });
        this.$apply();
        Tips.toast('删除成功');
      }
    },
    openUserRecords(openId){
      this.$navigate('./myRecords?id='+this.optionId+'&signNum='+this.signNum+'&isManager=false&groupInfo='+JSON.stringify(this.groupInfo)+'&openId='+openId.openId+'&nickName='+openId.nickName+'&avatarUrl='+openId.avatarUrl)
    },
    async scoreConfirmFunc(score){
      if(this.signNum=='-1'){
        this.joinModal=true
      }else{
        await Config.score('?SignID='+score.SignID+'&GroupID='+this.optionId+'&score='+score.score);
        //  this.$broadcast('scoreChange',score.score);
          this.myMomentsList.forEach(item=>{
          if(item.SignID==score.SignID){
            item.Score=score.score;
             this.$apply();
          }
        });
        Tips.toast('评分成功');
      }
    },
   scrollHandler(e){
      this.loadMore=true;
      if(this.hasMore==false)return;
      this.pageIndex+=1;
      this.loadList(this.currentDateValue,this.currentTurnSort);
    },
    changeTurn(){
       this.turnModelShow=true;
    },
    chooseTurn(e){
       this.pageIndex=1;
      this.myMomentsList=[];
      this.currentTurnSort=e.currentTarget.dataset.text;
      this.currentTurn=e.currentTarget.dataset.content;
      this.turnModelShow=false;
      this.loadList(this.currentDateValue,this.currentTurnSort)
    },
    chooseShare(e){
      let text=e.currentTarget.dataset.text;
      let date=this.groupInfo.BeginDate+'至'+this.groupInfo.EndDate;
      switch(text){
        case '生成二维码':
          this.$navigate('./wxCodeShare?id='+this.groupInfo.GroupID+'&groupTitle='+this.groupInfo.GroupTitle+'&date='+date);
            break;
        case '生成分享图':
          this.$navigate('./shareImage?bgImg='+this.groupInfo.BackgroundURL+'&name='+this.groupInfo.NickName+'&id='+this.groupInfo.GroupID+'&title='+this.groupInfo.GroupTitle+'&date='+date);
            break;
      }
      this.shareModelShow=false;
    },
    transmit(){
      if(!this.groupInfo.CanTransmit){
        Tips.confirm('该小组设置了不允许转发')
      }
    },
    previewImg(e){
      wx.previewImage({
          current:e.url, // 当前显示图片的http链接
          urls:  this.myMomentsList[e.id].ImagesList// 需要预览的图片http链接列表
      })
    },
    selectFilter(e){
      this.pageIndex=1;
      this.myMomentsList=[];      
      let name=e.currentTarget.dataset.name;
      if(name=='all'){
          this.filterClass=['bordered','',''];
          this.currentDateValue='';
          this.loadList('','');
      }
      if(name=='today'){
         this.filterClass=['','bordered',''];
          this.currentDateValue=Config.nowDate();
           this.loadList(Config.nowDate(),'');
      }
      if(name=='date'){
         this.filterClass=['','','bordered'];
      }
      this.$apply()
    },
    openSignInfo(){
      let date=this.groupInfo.BeginDate+'至'+this.groupInfo.EndDate;
      let time=this.groupInfo.BeginTime+'至'+this.groupInfo.EndTime;
      this.$navigate('./writeSignInfo?Properties='+JSON.stringify(this.groupInfo.Properties.Properties)+'&id='+this.optionId+'&date='+date+'&time='+time+'&rules='+this.groupInfo.SignRules+'&BMI='+this.groupInfo.BMI)
      this.joinModal=false
    },
    inputSignToken(e){
      this.signToken=e.detail.value
    },
    signTokenClick(){
      if(this.signToken==this.groupInfo.SignToken){
        this.tokenModalShow=false;
        this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date=null')
      }else{
        Tips.toast('签到口令输入有误，请联系创建者','none');
        return
      }
    },
    async favoriteFunc(e){
      if(this.signNum=='-1'){
        this.joinModal=true
      }else{

        let result = await Config.praise('?OpenID='+this.creater+'&GroupID='+this.optionId+'&SignID='+e.id);
        let current = this.myMomentsList.findIndex(item=>item.SignID==e.id);
        if(result){
          this.myMomentsList[current].PraisedTimes=parseInt(this.myMomentsList[current].PraisedTimes);
          if( this.myMomentsList[current].IsPraised==false){
            this.myMomentsList[current].PraisedTimes+=1;
            this.myMomentsList[current].IsPraised=true;
          }else{
            this.myMomentsList[current].PraisedTimes-=1;
            this.myMomentsList[current].IsPraised=false;
          }
              this.$apply()
        }
      }
    },
     onShareAppMessage(res) {//转发到微信
      if (res.from === 'button') {
        this.shareModelShow=false
      }
      return {
        title: '邀请你来签到',
        imageUrl:this.groupInfo.BackgroundURL,
        path: '/pages/index?id='+this.optionId+'&scene=true'
      }
    },
    joinSign(){ 
      this.ifCanSign=this.canSign();
      if(this.ifCanSign){
         this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date=null')
      }
      
      // this.modalShow=true;
      // //调用微信支付接口
      // wx.requestPayment({
      //     timeStamp: '',
      //     nonceStr: '',
      //     package: '',
      //     signType: 'MD5',
      //     paySign: '',
      //     success(res) { },
      //     fail(res) { }
      //     })
      //  this.$broadcast('modalChange',this.modalShow)
    },
    
    setMessage(e){
      this.$navigate('./openNotice?id='+this.optionId)
    },
    setDate(event){
     this.radioBtn.forEach(item => {
       item.btnStatus='btn-outline';

       if(item.id==event.currentTarget.dataset.id){
         item.btnStatus=''
       }
       
     });
   },  
    goCommet(e){
      this.$navigate('./postCommet?id='+this.optionId+'&type=2&msg='+JSON.stringify(msg.msgId)+"&isComment=false&groupInfo="+JSON.stringify(this.groupInfo))
    },
    userManamgeFunc(e){
      this.$navigate('./memberGroup?id='+this.optionId+'&url='+'signItemDetail')
    },
    bindPickerChange(e){
      this.dataValue=e.detail.value;
      this.currentDateValue=this.dataValue;
      this.loadList(this.dataValue, '')
    },
    audioPlay(e){
      let currentMsg=this.myMomentsList.findIndex(item=>item.SignID==e.id);
      this.innerAudioContext.autoplay = false;
      this.innerAudioContext.src = e.url;
      this.innerAudioContext.play();
      this.innerAudioContext.onPlay(() => {
        
        this.myMomentsList.forEach((item)=>{
          if(item.SoundRecordingsList){
            item.SoundRecordingsList.forEach((sbItem)=>{
              sbItem.animation='';
            })
          }
        });
        this.myMomentsList[currentMsg].SoundRecordingsList[e.index].animation='animation';
        this.$apply()
        console.log('开始播放')
      });
      this.innerAudioContext.onError((res) => {
      });
      this.innerAudioContext.onEnded((res) => {
        console.log('结束播放');
        this.myMomentsList[currentMsg].SoundRecordingsList[e.index].animation=''
        this.$apply()
      });
    }
  }

    canSign(){//判断是否可以签到
       if(this.signNum=='-1'){
        this.joinModal=true;
        this.$apply();
        return false
      }else if(this.groupInfo.SignToken!='null'&&this.groupInfo.SignToken!=null){
        this.signToken='';
        this.tokenModalShow=true;
        return
      }else if(this.groupInfo.SignTimes==this.signNum){
        this.ifSigned=false;
      }
      let startdate = new Date(this.groupInfo.BeginDate).getTime();
      let enddate = new Date(this.groupInfo.EndDate).getTime();
      let endtime=this.groupInfo.EndTime.split(":");
      let starttime= this.groupInfo.BeginTime.split(":")
      endtime = parseInt(endtime[0])*12 + endtime[1]+ endtime[2];
      starttime = parseInt(starttime[0])*12 + starttime[1]+ starttime[2];
      let now=Config.now().split(":");
      let today=Config.today();
      now=parseInt(now[0])*12 + now[1]+now[2];
     if(parseInt(endtime)>parseInt(now)&&enddate>today&&parseInt(starttime)<parseInt(now)&&startdate<today&&this.groupInfo.SignTimes>this.signNum){
        return true
      }else if(parseInt(endtime)<parseInt(now)||enddate<today||parseInt(starttime)>parseInt(now)||startdate>today){ 
        Tips.toast('不在签到时间内','none');
        return false
      }
       
    }
    dealNumber(data){
      data.forEach(function(item){
        let newNum = parseInt(item.PraiseTimes);
        newNum>=999?newNum="999+":newNum=newNum
        return newNum
      })
    }
    async loadList(Date,Sort){
     
      let  param={
          'GroupID':this.optionId,
          'OpenID':this.creater,
          'pageIndex':this.pageIndex,
          'pageSize':10,
          'Date':Date,
          'Sort':Sort
        } 
      let list=await Config.onePageInfo(param);
      if(list.Messages.length==0){
        this.hasMore=false;
        this.loadMoreText='暂无更多数据';
        this.$apply();
        return
      };
      this.pageIndex=='1'? this.myMomentsList = list.Messages:this.myMomentsList = this.myMomentsList.concat(list.Messages);
        console.log(JSON.stringify(this.myMomentsList))
      this.myMomentsList.forEach(item=>{
        item.animation='animation';
        if(this.groupInfo.OpenID==this.creater||this.isManager=='true'){
          if(item.OpenID!=this.creater){
             item.showScore=true
          }
          item.showMore=true;
        }else if(this.isManager=='true'&&item.OpenID!=this.creater){
          item.showScore=true;
        }else{
          if(item.OpenID==this.creater){
            this.creater!=this.groupInfo.OpenID?this.moreBtnList=['删除记录']:this.moreBtnList=['删除记录','设为置顶','加入黑名单']
            item.showMore=true;
          }else{
            item.showMore=false;
          }
        }
         
      });
      this.dealNumber(this.myMomentsList);
      this.$broadcast('getMomentsList',this.myMomentsList);
      this.$apply();
    }
    async initData(){
      let parm={
          'GroupID':this.optionId
       }
       let stateParam={
          'OpenID':this.creater,
          'GroupID':this.optionId
       }
      let signNum=await Config.groupState(stateParam);
      this.groupInfo= await Config.groupInfo(parm);
      
      if(this.groupInfo.AllCanSee==true){
        this.AllCanSee=true
      }else {
        signNum!='-1'?this.AllCanSee=true:this.AllCanSee=false
        
      }
      this.signNum=isNaN(signNum)?signNum.data:signNum;
      if(parseInt(this.signNum)>-1&&parseInt(this.signNum)<this.groupInfo.SignTimes){
        this.ifSigned=true
      }else if(parseInt(this.signNum)==this.groupInfo.SignTimes){
        this.ifSigned=false
      }else if(parseInt(this.signNum)==-1){
        this.ifSigned='none'
      }
      this.groupInfo.BeginDate=this.groupInfo.BeginDate.slice(0,10);
      this.groupInfo.EndDate=this.groupInfo.EndDate.slice(0,10);
      this.groupInfo.EndTime=this.groupInfo.EndTime.slice(11);
      this.groupInfo.BeginTime=this.groupInfo.BeginTime.slice(11);
       this.isManager=this.optionManager||this.groupInfo.NickName.replace(/\s/g,'')==JSON.parse(Auth.getConfig("userInfo")).nickName;
      this.$apply();
    }
   async  onShow(){
         let pages = getCurrentPages();
        let currPage = pages[pages.length - 1];
        let prevPage = pages[pages.length - 2];
        console.log(currPage.data.params)
        if(currPage.data.params!=undefined){
          console.log('2222')
           this.myMomentsList[this.currentIndex]=currPage.data.params.groupInfo;
        }
    }
    onHide(){
      wepy.$instance.globalData.scene=false;
    }
  async  onLoad(option){
       this.creater=Auth.getConfig('openId');
       wx.showShareMenu({
        withShareTicket: true
      })
      this.signTimes=option.signTimes;
      this.optionManager=option.isManager;
      this.innerAudioContext = wepy.createInnerAudioContext();
      this.status=option.status;
      option.id?this.optionId=option.id:this.optionId=option.GroupID;
      
       await this.initData();
       await this.loadList('','');
    }
  }
</script>
