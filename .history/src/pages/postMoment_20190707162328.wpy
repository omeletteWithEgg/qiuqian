<style lang="less">
    // @import "../style/app.less";
     @btn-primary-color:#FF6F61;
    .top-view{
        padding: 20rpx 40rpx;
        .btn-round:last-child{
            width:auto;
        }
    }
    .content-view{
       @keyframes spin {
          0% {
            opacity: .2;
            -webkit-transform: scale(1);
            transform: scale(1)
          }
          50% {
            opacity: 1;
            -webkit-transform: scale(1.1);
            transform: scale(1.1)
          }
          100% {
            opacity: .2;
            -webkit-transform: scale(1);
            transform: scale(1)
          }
        }
       .tip-text{
           padding:20rpx 40rpx;
           font-size:25rpx;
       }
       .tip-text.red{
           color:@btn-primary-color
       }
        .textarea-input{
            position: relative;
             padding:20rpx 40rpx 0 40rpx;
            background: #fff;
          
            textarea{
                font-size:28rpx;
                color:#333;
                width:100%;
                box-sizing: border-box;
            }
            .media-view{
                 overflow:hidden;
            }
            .add{
                width: 100rpx;
                height: 100rpx;
                border-radius:12rpx;
                border:1rpx solid rgba(217,217,217,1);
                text-align: center;
                font-size:20rpx;
                color:#5f5f5f;
                margin-right:20rpx;
                float: left;
                .iconfont{
                    margin-top:20rpx;
                }
                .icon-htmal5icon13{
                    font-size:46rpx;
                    margin-top:10rpx;
                    font-weight:bold

                }
            }
        }
        .photo-wrap{
            position: relative;
            display:inline-block;
            margin-right:15rpx;
            padding:20rpx 28rpx 20rpx 0;

            .icon-shanchuguanbicha2{
              position: absolute;
              bottom:0;
              right:4rpx;
              top:8rpx;
              color:#666;

            }
        }
        .flex-form.audio-list{
          justify-content:inherit;
          flex-wrap:wrap;
          padding:20rpx 40rpx;
          background:#fff;
        }
       .audios{
          height:69rpx;
          line-height:69rpx;
          width:22%;
          margin-right:3%;
          background:@btn-primary-color;
          border-radius:12rpx;
           color:#fff;
           margin-bottom:10rpx;
           position: relative;
           :last-child{
               margin-right:0
           }
          
          .iconfont{
              position: absolute;
              right:18rpx;
              font-size:34rpx;
              &.animation{
                animation: spin 1s linear infinite;
              }
              &.icon-yuyin{
                right:24rpx;
              }
              &.icon-shanchuguanbicha2{
               right:-14rpx;
                top:-27rpx;
                color:#666;
                font-size:34rpx;
              }
          }
          .text{
              position: absolute;
              left:16rpx;
              font-size: 24rpx;
          }
        }
      .icon-luyinji{
        color:@btn-primary-color;
        font-size:50rpx;
        vertical-align:middle;
         &.animation{
          animation: spin 1s linear infinite;
        }
      }
    }
    .contact-btn{
        position: absolute;
        bottom:170rpx;
        left: 30rpx;
        right:30rpx;
        text-align: center
    }

</style>
<template>
    <form bindsubmit="savePost" report-submit='true'>
        <view class="flex-form top-view">
            <button class="btn-round disabled" @tap="cancel">取消</button>
            <button class="btn-round" form-type="submit">保存并发布</button>
        </view>
        <view class="content-view">
            <view class="textarea-input">
             <textarea  name="content" placeholder="请输入内容，记录点滴生活" maxlength='-1' bindinput="fillContent" cursor-spacing='100'/>
             <view class="media-view">
                 <view ><view class="photo-wrap" wx:for="{{photos}}" @tap="deleteImg" data-url="{{index}}"><text class="iconfont icon-shanchuguanbicha2"></text><image src="{{item}}" mode="scaleToFill" style="width:118rpx;height:118rpx"></image> <canvas style="width: {{cw}}px; height: {{ch}}px;position:absolute;top:-2000rpx;left:-2000rpx" canvas-id="canvasBg{{index}}"></canvas></view></view>
                 
                 <view class="add"  @tap="postPhotos" style="display:{{photos.length==8}}">
                     <view class="iconfont icon-xiangji"></view>
                     <view>上传照片</view>
                 </view>
                  <view class="add"  @tap='openRecording' wx:if="{{audios.length!=8&&!recording}}" >
                     <view class="iconfont icon-htmal5icon13"></view>
                     <view>打开录音</view>
                 </view>
             </view>
            </view>
             <view class="flex-form audio-list" >
                <view wx:for="{{audios }}" wx:for-item="audioItem"  wx:for-index="audioIndx" data-id="{{audioIndx}}" class="audios" @tap="audioPlay" data-src="{{audioItem.tempFilePath}}" ><text class="iconfont icon-yuyin {{audioItem.animation}}" ></text><text @tap.stop="deleteRecord" class="iconfont icon-shanchuguanbicha2"></text><text class="text">{{audioItem.duration}}"</text></view>
            </view>
            <view style="text-align:center;padding:10rpx 0" wx:if="{{recording}}"  @tap="stopRecord" >
            <text 
            class="iconfont icon-luyinji {{animation}}"></text><text class="record-timer">点击结束录音 {{recordTime}}s</text><text class="tip-text" style="display:block">提示：最多支持上传8段录音，每段录音最长60000s(10分钟)</text></view>
            <text class="tip-text red">提示：发起人设置了签到必须填写{{signText}}{{signImg}}{{signAudio}}</text>
        </view>
        <!-- <view class="contact-btn tip-text" @tap="contactCs">联系客服</view> -->
    </form>
</template>
<script>
 import wepy from 'wepy';
  import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'


  export default class postMoment extends wepy.page {
     config = {
      navigationBarTitleText: '发布签到日记'
    }

    data={
         recorderManager:[],
        photos:[],
       audios:[],
       content:'',
       optionId:'',
       animation:'',
       cw:'',
       ch:'',
       drawImageList:[],
       date:'',
       recordTimeInterval:null,
       recordTime:0,
       recording:false,
       signForm:'',
       signText:'',
       signImg:'',
       signAudio:'',
       systemInfo:{}
    }

    methods = {
       openRecording(){
          this.recording=true;
          this.animation='animation';
          const options = {
              duration: 60000,
              sampleRate: 44100,
              numberOfChannels: 1,
              encodeBitRate: 192000,
              format: 'mp3',
              frameSize: 50
          }
          this.recorderManager.start(options);
          this.recorderManager.onStart(() => {
            let that=this;
            this.recordTimeInterval = setInterval(function(){
              that.recordTime+=1;
              that.$apply()
            },1000);
          });
          
         
          
          //错误回调
           this.recorderManager.onError((res) => {
            clearInterval(this.recordTimeInterval);
            console.log(JSON.stringify(res));
          })
        },
        stopRecord(){
          this.animation='';
          this.recordTime=1;
          this.recording=false;
              //停止录音事件
          this.recorderManager.stop();
          this.recorderManager.onStop((res) => {
            res.duration=(res.duration/1000).toFixed(0);
            res.animation='';
            if(res.duration<2){
              Tips.toast('录音时间太短','none')
              return
            }else{
              this.audios.push(res);
            }
            clearInterval(this.recordTimeInterval);
            this.$apply()
          });
         
        },
         audioPlay(e){

          let innerAudioContext = wepy.createInnerAudioContext();
          let id = e.currentTarget.dataset.id;
          let url = e.currentTarget.dataset.src;
          
          innerAudioContext.autoplay = false;
          innerAudioContext.src = url;
          innerAudioContext.play();
          innerAudioContext.onPlay(() => {
             this.audios.forEach((item)=>{
                // item.SoundRecordingsList((sbItem)=>{
                  item.animation='';
                // })
              });
              this.audios[id].animation='animation';
            console.log('开始播放')
          });
          innerAudioContext.onError((res) => {
            console.log(res.errMsg)
            console.log(res.errCode)
          });
          innerAudioContext.onEnded((res) => {
            console.log('结束播放');
            this.audios[id].animation=''
            this.$apply()
          });
        },
        postPhotos(){
          const that=this;
          Tips.chooseImage('8', ['album', 'camera']).then((result)=>{
            result.tempFilePaths.forEach((item,index)=>{
              that.photos.push(item);
              this.$apply();
              Auth.getImageInfo(item).then(res=>{
                let originWidth, originHeight;
                originWidth = res.width;
                originHeight = res.height;
                let targetWidth= originWidth,
                targetHeight = originHeight;
                let ratio=originWidth/originHeight;
                let windowWidth=this.systemInfo.screenWidth*0.9;
                let windowHeight=this.systemInfo.screenHeight*0.9;
                if (windowWidth<originWidth) {
                  targetWidth = windowWidth;
                  let scale=targetWidth/originWidth;
                  if(ratio<1){
                    targetHeight = Math.floor(originHeight*scale)
                  }else{
                    targetHeight = Math.floor(originHeight*scale);
                  }
                }else if(windowHeight<originHeight){
                   targetHeight = windowHeight;
                   let scale=targetHeight/originHeight;
                    if(ratio<1){
                      targetWidth = Math.floor(targetWidth*scale)
                    }else{
                      targetWidth = Math.floor(targetWidth*scale);
                    }
                }
                this.cw=targetWidth;
                this.ch=targetHeight;
                 //尝试压缩文件，创建 canvas
                let ctx = wx.createCanvasContext('canvasBg'+index);
                ctx.drawImage(res.path, 0, 0, targetWidth, targetHeight);
                wx.showLoading({title:"压缩中..."})
                this.$apply();
                ctx.draw(false,()=>{
                  Auth.drawImage({
                  canvasId: 'canvasBg'+index,
                  quality:1,
                  width:targetWidth,
                  height:targetHeight,
                  destWidth: targetWidth,
                  destHeight: targetHeight
                }, this).then(({ tempFilePath }) => {
                  console.log(JSON.stringify(tempFilePath))
                  that.drawImageList.push(tempFilePath);
                  this.$apply()
                  wx.hideLoading()
                }).catch(error=>{
                  Tips.toast(error.message,'none')
                })
              })
            }) 
            }) 
              
          })
          // })   
        },
        fillContent(e){
          this.content=e.detail.value
        },
        deleteRecord(e){
          this.audios.splice(e.currentTarget.dataset,1);
          this.$apply()
        },
        deleteImg(e){
          this.photos.splice(e.currentTarget.dataset.url,1);
          this.drawImageList.splice(e.currentTarget.dataset.url,1);
          this.$apply()
        },
        async savePost(e){
          let param={
            'Context':this.content,
            'formId':e.detail.formId,
            'date':this.date,
            // 'NickName':JSON.parse(Auth.getConfig('userInfo')).nickName
          }
          if(this.content==''&&this.signForm[0]=='1'){
            Tips.toast('请输入签到内容','none')
            return
          }else if(this.photos.length==0&&this.signForm[1]=='1'){
            Tips.toast('签到图片为必填项','none')
            return
          }else if(this.audios.length==0&&this.signForm[2]=='1'){
            Tips.toast('签到录音为必填项','none')
            return
          }else{
            let url='user/signIn?OpenID='+Auth.getConfig("openId")+'&GroupID='+this.optionId;
            let signID = await Config.signIn(url,param);
            console.log(isNaN(signID)&&isNaN(signID.data))
            if(isNaN(signID)&&isNaN(signID.data)){
               Tips.toast('签到失败','none');
               return
            }else{

              if(this.drawImageList.length>0){
                await Auth.submitFiles(this.optionId,this.drawImageList,'img',signID,'sign');
               };
               if(this.audios.length>0){
                await Auth.submitFiles(this.optionId,this.audios,'mp3',signID,'sign');
               }
               Tips.toast('签到成功','success');
               let pages = getCurrentPages();
              let lastPage = pages[pages.length - 2];
              if(lastPage.route=='pages/myRecords'){
                lastPage.updateSignNum()
              }
               setTimeout(()=>{
                 let  param={
                  'optionId':this.optionId
                 };
                 Auth.backOpener(param)
                },500)
            }
          }
        },
        cancel(){
          wx.navigateBack()
        },
    }
     onHide() {
      //写在onHide()中，切换页面或者切换底部菜单栏时关闭定时器。
      clearInterval(this.data.recordTimeInterval);
    }
     onUnload() {
      //写在onHide()中，切换页面或者切换底部菜单栏时关闭定时器。
      clearInterval(this.data.recordTimeInterval);
    }
    onLoad(option){
      wepy.getSystemInfo().then(res=>{
        this.systemInfo=res
      });
      option.date=='null'?this.date=null:this.date=option.date;
      this.recorderManager=wx.getRecorderManager();
      this.optionId=option.id;
      this.signForm=option.signForm.replace(/\s/g,'');
      this.signForm=this.signForm.split('');
      if(this.signForm[0]=='1'){
        this.signText='文字'
      }
      if(this.signForm[1]=='1'){
         this.signImg='图片'
      }
      if(this.signForm[2]=='1'){
         this.signAudio='语音'
      }
      
    }
}

 
  
</script>
