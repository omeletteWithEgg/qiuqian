<style lang="less">
@btn-primary-color:#FF6F61;
.view-top{
    position: relative;
    height: 240rpx;
    background-color: #08c;
    .btn-outline-mini{
        color:#fff;
        border:1rpx solid #fff;
    }
    .img-text{
        color:#fff;
        position: absolute;
        top:20rpx;
        bottom:45rpx;
        right: 40rpx;
        left: 40rpx;
        font-size:14px;
        font-size:28rpx;
        .content-title{
            margin-bottom:70rpx;
        }
        >.flex-form{
            // padding:0px 40rpx 0 60rpx;
            text-align:center;
          .sub-text{
              color:#fff;
              line-height: 28rpx;
              text-align: center
          }
        }
        .img-wrap,.user{
            display: inline-block;
            vertical-align:middle
        }
    };
}
.view-middle{
  
    font-size:24rpx;
    color:#808080;
    border-bottom:20rpx solid #f3f3f3;
    padding:30rpx 40rpx;
    line-height:45rpx;
    .sub-title{
       text-align: left;
       font-size:12px;
       padding-bottom: 0rpx;
        
    }
    
    .picker{
      border:1rpx solid #999;
      padding:0rpx 19rpx;
      border-radius:6rpx;
      margin-right:5px;

    }
    .num-count{
         display: inline-block;
        view{
            display: inline-block;
            &.iconfont{
                font-size:38rpx;
                font-weight: 500;
                padding:0px 8rpx;
                vertical-align: middle;
            }
            
        }
        &~.btn-round{
            display: inline-block;
        }
    }
}
.view-calendar{
    padding:40rpx;
    border-bottom:20rpx solid #f3f3f3;
    >view:first-child{margin-bottom:50rpx}
    .sub-text{
        padding-bottom: 0px;
    }
    .blue-text{
      color:#08c
    }
    .flex-form{
        padding: 0rpx 40rpx 0px 40rpx;
        justify-content: center;
        .btn-round{
            margin:auto;
            width:180rpx;
        }
    }
}

.view-bottom{
    background: #fff;
    .top-content{
        border-bottom:1rpx solid #e2e2e2;
        padding:35rpx 40rpx;
        color:#808080;
        font-size:24rpx;
       
    }
   .moment-list{
       padding: 0px 0px 20rpx 58rpx ;
       .comments-list{
          .comments-list-item{
              padding: 0px 16rpx
          }
            
       }
   }
    .middle-content{
       color: #FFF;
       padding:0px 40rpx 40rpx 40rpx;
       line-height: 40rpx;
       font-size:26rpx;
       >.flex-form{
           padding-top:14rpx;
           border-top:1rpx solid #efefef;
           &:first-child{
               border-top:0rpx;
           }
       }
       .content-text{
           line-height: 34rpx;
       }
        .img-wrap{
            display:inline-block;
        }
        .icon-Group-{
            color:#000;
            font-size:40rpx;
        }

       .icon-views{
          //  padding:20rpx 0px;
           .iconfont{
               color:#808080;
               font-size:24rpx;
               display: inline-block;
               vertical-align: middle;
               &.icon-liuyan{
                   font-size:44rpx;
               }
               &.icon-star{
                   font-size:38rpx
               }
               &.icon-aixin{
                   font-size:35rpx
               }
               &.icon-aixin.favorite{
                  color:@btn-primary-color
               }
           }
       }
       .img-item{
           margin-bottom:12rpx;
          width:195rpx;
         height:195rpx;
            margin-right:15rpx;
           display: inline-block;
          
       }
        .img-first{
            width:100%;
            height: 280rpx;
        }
       .btn-items{
           padding-right:30rpx
       }
    }

}
.content-list {
    background:#fff;
    border-radius: 15rpx;
    .sub-title{
        padding:0rpx 40rpx 20rpx 40rpx;
    }
    input{
      width:90%;
      height:72rpx;
      text-indent:15rpx;
      color:#000;
      font-size:14px;
      box-sizing:border-box;
      display: inline-block;
      border:1rpx solid rgba(149,152,154,1);
      border-radius: 12rpx;
    }
    .list-item{
        height:99rpx;
        line-height:99rpx;
        font-size:30rpx;
        border:none;
        color:#333;
        border-bottom: 1rpx solid #eaeaea;
        &:last-child{
            border-bottom:0rpx;
        }
    }
}
.no-data{padding-top:20rpx}
</style>
<template>
<view style="height:100%;background:#fff">
    <scroll-view scroll-y="true" style="height:100%" bindscrolltolower="scrollHandler">
    <view class="view-top" style="background:url({{groupInfo.BackgroundURL}}) no-repeat 100% 100%/cover">
        <view class="img-text ">
             <view class="content-title flex-form">
                <view>
                    <view class="img-wrap"><image type="scaleToFill" style="width:60rpx;height:60rpx;border-radius:100%;margin-right:20rpx" src="{{avatarUrl}}"></image>  </view>
                    <view class="user">{{nickName}}</view> 
                </view>
                <view class="btn-outline-mini" @tap="backLastPage">返回签到</view>
            </view>
            <view class="flex-form">
                <view  wx:for="{{recordsList}}">
                    <view >{{item.num}}</view>
                    <view class="sub-text">{{item.label}}</view>
                </view>
            </view>
        </view>
    </view>
     <view class="view-middle" wx:if="{{isManager=='true'||groupInfo.OpenID==Auth.getConfig('openId')}}">
        <view class="flex-form">
             <view >
                <view>管理员设置补签次数</view>
                <view class="sub-title">剩余{{leaveTimes}}次补签机会</view>
            </view>
            <view >
                <picker class="num-count" bindchange="bindPickerChange" value="{{avaliCount}}" range="{{count}}">
                    <view class="picker">{{avaliCount}}</view>次
                    <view class="iconfont icon-jiantouarrow486"></view>

                </picker>
                <button class=" btn-round" @tap="setAvaliCount">确定</button>
            </view>

        </view>
            
    </view>
    <view class="view-calendar">
       <Calendar :checks.sync="signDateList" :reChecks.sync="reSignList" theme="default" /> 
       <block wx:if="{{signNum!=-1&&onlyOpenID==me}}">
         <!-- <view class="sub-text">在上面日历中选择你需要补签的日期</view> -->
         <view class="flex-form">
             <button class="btn-round" wx:if="{{showBtn=='0'}}"  @tap="toSign" disabled="{{!ifCanSign}}">去签到{{(signTip)}}</button>
             <button class="btn-round" wx:if="{{showBtn==''}}" disabled>已签到</button>
             <button class="btn-round" wx:if ="{{showBtn=='1'&&groupInfo.CanResign}}" disabled="{{resigned}}" @tap="toSigned">{{!resigned?'申请补签':'已经补签'}}</button>
             <button class="btn-round disabled" wx:if="{{showBtn=='1'&&!groupInfo.CanResign}}">不可补签</button>
         </view>
         <view class="sub-text" style="padding-top:28rpx">剩余{{leaveTimes}}次补签机会 <text class="blue-text" @tap="applyResignFunc" wx:if="{{leaveTimes==0&&showBtn=='1'&&groupInfo.CanResign}}">找管理员申请补签</text></view>
       </block>
    </view>
    
    <view class="view-bottom">
        <view class="top-content flex-form">
            <view class="sub-text">{{nickName}}的签到记录</view>
        </view>
        <view class="middle-content" wx:if="{{myMomentsList.length>0}}">
          <view wx:if="{{AllCanSee}}" >
            <repeat for="{{myMomentsList}}" key="index" index="index" item="item" >
                  <Comments 
                  :content.sync="item" 
                  :commentsBtnList.sync="commentsBtnList" 
                :showMore.sync="showMore"
                ifScore.sync="false"
                :list.sync="actionList"
                @favoriteFunc.user="favoriteFunc"
                @listBtnClickFunc.user="listBtnClickFunc"
                @toTopFunc.user="toTopFunc"
                @deleteMsgFunc.user="deleteMsgFunc"
                  @deleteItem.user="deleteMsg"
                  @previewImg.user="previewImg"
                  @audioPlay.user="audioPlay" >
                  </Comments>
              </repeat>
             <view class='sub-title' wx:if="{{loadMore}}">{{loadMoreText}}</view>
           </view>
           <view class="no-data sub-title" wx:else>该小组设置了签到不对所有人开放，仅自己可见</view>
        </view>
        <view wx:else class="no-data sub-title">暂无数据</view>
    </view>
      <tokenModal lefttext="取消"
        :modalshow.sync="tokenModalShow"
        modalStyle="top:35%;bottom:30%"
        righttext="确认"
        modaltitle="请输入签到口令"
        @confirmFunc.user="signTokenClick" >
         <view slot="content" class="content-list">
            <input type="text" value="{{signToken}}" bindblur="inputsignToken"></input>
            <view class="sub-title" style="padding-top:20rpx">联系小组创建者{{groupInfo.NickName}}获取签到口令</view>
          </view>
      </tokenModal>
     
    </scroll-view>
</view>
</template>

<script>
  import wepy from 'wepy';
   import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'
  import modal from '../components/modal'
  import Comments from '../components/commets'
  import Calendar from 'wepy-com-calendar'

  export default class myRecords extends wepy.page {
     config = {
      navigationBarTitleText: '签到记录'
    }

    components = {
      Calendar:Calendar,
       tokenModal:modal,
      Comments:Comments,
      turnModel:modal
    }

   data = {
     showBtn:'2',
     me:'',
     optionId:'',
     signNum:'',
     isManager:false,
     signToken:'',
     avaliCount:0,
     actionList:['删除','置顶'],
    showMore:true,
    onlyOpenID:'',
    resigned:false,
    tokenModalShow:false,
    titleshow:false,
    btnshow:false,
    signForm:'sign',
     loadMore:false,
     nickName:'',
     avatarUrl:'',
     ifCanSign:false,
     loadMoreText:'加载中...',
     hasMore:true,
     groupInfo:'',
     tapDate:'',
     hidden:false,
     AllCanSee:true,
     pageIndex:1,
     leaveTimes:'',
     signTip:'',
     topList:0,
     signDateList:[],
     reSignList:[],
     recordsList:[
         {'label':'当前排名','num':''},
         {'label':'累计签到','num':''},
         {'label':'连续签到','num':''},
         {'label':'最大连续','num':''},
     ],
     count:['1','2','3','4','5','6','7','8','9','10'],
     myMomentsList:[],
     commentsBtnList:[{
      'icon':'icon-liuyan',
      'text':'评论',
       'url':'./postCommet'
      
     },{
      'icon':'icon-zhuanfa',
      'text':'分享',
       'url':'./shareImage',
       'favorite':false
     },{
      'icon':'icon-detail',
      'text':'详情',
        'url':'./commentDetail'
     }]
   }

    events = {
      calendarAfterTapDay(date, e) {
        this.tapDate=date;
        console.log(date);
        let tapDate=new Date(date).getTime();
        let today=new Date(Config.nowDate()).getTime();
        let begin=new Date(this.groupInfo.BeginDate).getTime();
        this.showBtn='1';
        if(tapDate==today){
          this.showBtn='0'
        }else if(tapDate>today||tapDate<begin){
          this.showBtn='2'
        };
        this.signDateList.forEach((item)=>{
          let timeDate=new Date(item).getTime();
          if(timeDate==tapDate&&tapDate<today){
              this.showBtn='2';
          }
          
        });
        this.reSignList.forEach((item)=>{
          let timeDate=new Date(item).getTime();
          timeDate==tapDate?this.resigned=true:this.resigned=false
          
        })
      }
    }
   methods = {
    btnClickFunc(e){
      const url = e.currentTarget.dataset.url;
      let creater=Auth.getConfig('openId');
      let isManager=this.isManager||creater==this.groupInfo.OpenID;
      if(this.signNum=='-1'){
        this.joinModal=true;
          this.$apply();
      }else if(this.signNum!='-1'&&url!=''){
        this.$navigate(url+'?id='+this.optionId+'&isManager='+isManager+'&signNum='+this.signNum+'&groupInfo='+JSON.stringify(this.groupInfo))
      }else{
          this.shareModelShow=true
      }
    },
    
    previewImg(e){
      wx.previewImage({
          current:e.url, // 当前显示图片的http链接
          urls: this.myMomentsList[e.id].ImagesList// 需要预览的图片http链接列表
      })
    },
     audioPlay(e){
      this.innerAudioContext.autoplay = false;
      this.innerAudioContext.src = e.url;
      this.innerAudioContext.play();
      this.innerAudioContext.onPlay(() => {
        this.myMomentsList.forEach((item)=>{
          item.SoundRecordingsList((sbItem)=>{
            sbItem.animation='';
          })
        });
        this.myMomentsList[e.id].SoundRecordingsList[e.index].animation='animation';
        console.log('开始播放')
      });
      innerAudioContext.onError((res) => {
        console.log(res.errMsg)
        console.log(res.errCode)
      });
      innerAudioContext.onEnded((res) => {
        console.log('结束播放');
        this.myMomentsList[e.id].SoundRecordingsList[e.index].animation=''
        this.$apply()
      });
     },
  
    listBtnClickFunc(id){
       this.$root.$navigate(this.commentsBtnList[id.id].url+'?groupInfo='+JSON.stringify(id.msg)+"&type=1&id="+this.optionId+'&bgImg='+this.groupInfo.BackgroundURL);
    }, 
     async toTopFunc(id){
     let currentIndex=this.myMomentsList.findIndex(item=>item.SignID==id.SignID);
        let currentItem=this.myMomentsList[currentIndex];
        let Operate,toastText;
        if(id.IsTop==true){
          Operate=2;
          toastText='取消置顶成功';
        }else{
          Operate=1;
          toastText='置顶成功';
        }
        await Config.toTop('?SignID='+id.SignID+'&GroupID='+this.optionId+'&Operate='+Operate+'&AdminOpenID='+Auth.getConfig('openId'));
       this.loadList()
        this.$broadcast('toTop',true)
        this.$apply();
        Tips.toast(toastText);
    },
   
    async deleteMsg(msg){//删除签到
      await Config.deleteMessage('?SignID='+msg.SignID+'&GroupID='+this.optionId+'&OpenID='+msg.OpenID+'&AdminOpenID='+Auth.getConfig('openId'));
      this.$apply();
      this.myMomentsList.splice(this.myMomentsList.findIndex(item=>item.SignID==msg.SignID),1);
      Tips.toast('删除成功');
    },
    async deleteMsgFunc(msg){//删除评论回复
      let type=msg.type;
      if(type=='1'){//回复
        this.$navigate('./postCommet?id='+this.optionId+'&type=2&groupInfo='+JSON.stringify(msg.msgId))
      }else if(type=='2'){//删除
        await Config.deleteMessage('?SignID='+msg.signId+'&GroupID='+this.optionId+'&OpenID='+msg.openId+'&messageID='+msg.msgId.messageID+'&AdminOpenID='+Auth.getConfig('openId'));
        this.myMomentsList.forEach(item=>{
          if(item.SignID==msg.signId){
            item.Messages.splice(item.Messages.findIndex(sbitem=>sbitem.messageID==msg.msgId.MessageID),1);
          }
        });
        this.$apply();
        Tips.toast('删除成功');
      }
    },
   
    async setAvaliCount(){
       if(this.avaliCount<this.leaveTimes){
        Tips.toast('设置的补签次数不能小于当前剩余补签次数','none');
        return
      };
      await Config.setResign('group/setReSignTimes?GroupID='+this.optionId+'&OpenID='+this.groupInfo.OpenID+'&times='+this.avaliCount+'&AdminOpenID='+Auth.getConfig('openId')+'&MessageID=0');
      Tips.toast('设置成功');
      this.leaveTimes=this.avaliCount;
      this.$apply()
    },
    inputsignToken(e){
      this.signToken=e.detail.value
    },
    signTokenClick(){
      if(this.signToken==this.groupInfo.SignToken){
        this.tokenModalShow=false;
        if(this.ifCanSign){
          if(this.signForm=='sign'){
            this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date=null')
          }else if(this.signForm=='resign'){
            this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date='+this.tapDate)
          }
        }
      }else{
        Tips.toast('签到口令输入有误，请联系创建者','none');
        return
      }
    },
    toSigned(){
      if(this.leaveTimes==0){
        Tips.confirm('已无剩余补签次数,请联系管理员申请补签次数');
        return 
      };
      if(this.groupInfo.SignToken!='null'&&this.groupInfo.SignToken!=null){
        this.tokenModalShow=true;
        this.signToken='';
        this.signForm='resign';
      }else{
         this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date='+this.tapDate)
      }
    },
    toSign(){
      if(this.groupInfo.SignToken!='null'&&this.groupInfo.SignToken!=null){
        this.tokenModalShow=true;
        this.signToken='';
        this.signForm='sign'
      }else{
         this.$navigate('./postMoment?id='+this.optionId+'&signForm='+this.groupInfo.SignForm+'&date=null')
      }
    },
    scrollHandler(e){
      this.loadMore=true;
      if(this.hasMore==false)return;
      this.pageIndex+=1;
      this.loadList('',this.chooseTurn);
    },

    async applyResignFunc(){
       await Config.reSign('user/group/requireResignTime?GroupID='+this.optionId+'&OpenID='+Auth.getConfig('openId'));
       Tips.toast('申请成功，请耐心等待管理员审核','none')
     },
    async favoriteFunc(id){
      await Config.praise('?OpenID='+Auth.getConfig('openId')+'&GroupID='+this.optionId+'&SignID='+id);
      this.$apply()
    },
     // favoriteFunc(e){
     //   const index = e.currentTarget.dataset.key;
     //   const ifFavorite = this.myMomentsList[index].favorite;
     //   if(ifFavorite=='0'){
     //      this.myMomentsList[index].favoriteNum = parseInt(this.myMomentsList[index].favoriteNum);
     //      this.myMomentsList[index].favoriteNum+=1;
     //       this.myMomentsList[index].favorite = '1';
     //   }else{
     //       this.myMomentsList[index].favoriteNum = parseInt(this.myMomentsList[index].favoriteNum);
     //       this.myMomentsList[index].favoriteNum-=1;
     //       this.myMomentsList[index].favorite= '0';
     //   }
        
     // },

    bindPickerChange(e) {

      this.avaliCount=parseInt(e.detail.value)+1;
      if(this.avaliCount<this.leaveTimes){
        Tips.toast('设置的补签次数不能小于当前剩余补签次数','none');
        return false
      }
    },
   
    backLastPage(e){
     wx.navigateBack({
          delta: 1
      })
    }
  }
  dealNumber(data){
      data.forEach(function(item){
        let newNum = parseInt(item.PraiseTimes);
        newNum>=999?newNum="999+":newNum=newNum
        return newNum
      })
    }

    canSign(){//判断是否可以签到
      
      let startdate = new Date(this.groupInfo.BeginDate).getTime();
      let enddate = new Date(this.groupInfo.EndDate).getTime();
      let endtime=this.groupInfo.EndTime.split(":");
      let starttime= this.groupInfo.BeginTime.split(":")
      endtime = parseInt(endtime[0])*12 + endtime[1]+ endtime[2];
      starttime = parseInt(starttime[0])*12 + starttime[1]+ starttime[2]
      let now=Config.now().split(":");
      now=parseInt(now[0])*12 + now[1]+now[2];
      let today=Config.today();
      
      if(parseInt(endtime)>now&&enddate>today&&parseInt(starttime)<now&&startdate<today&&this.groupInfo.SignTimes>this.signNum){
         this.ifCanSign=true;
      }else if(parseInt(endtime)<parseInt(now)||enddate<today||parseInt(starttime)>parseInt(now)||startdate>today){ 
        this.signTip='不在签到时间内';
        this.ifCanSign=false;
      }

  }
  async loadList(){
    let param={
        'GroupID':this.optionId,
        'OpenID':this.me,
        'onlyOpenID':this.onlyOpenID,
        'pageIndex':this.pageIndex,
        'pageSize':10
    } 
    let list=await Config.onePageInfo(param);
    if(list.Messages.length==0){
      this.hasMore=false;
      this.loadMoreText='暂无更多数据';
      this.$apply();
      return;
    }else{
      if(this.pageIndex=='1'){
        this.myMomentsList = list.Messages;
      }else{
        this.myMomentsList = this.myMomentsList.concat(list.Messages);
      }
    }
    this.myMomentsList.forEach(item=>{
      if(item.IsTop===true){
        this.topList+=1;
      }
        if(item.OpenID==Auth.getConfig('openId')){
          item.showMore=true
        }else{
          item.showMore=false
        }
      })
    this.$apply();
  }
  async getData(){
    let param={
      'GroupID':this.optionId,
      'OpenId':this.onlyOpenID
    }
    let res = await Config.signedRecord(param);
    this.data.recordsList[3].num=res.MaxContinueTimes;
    this.data.recordsList[2].num=res.ContinueSignTimes;
    this.data.recordsList[1].num=res.TotalSignTimes;
    this.data.recordsList[0].num=res.CurrentRank;
    !res.ReSignTimes?this.leaveTimes='0':this.leaveTimes=res.ReSignTimes;
    this.avaliCount=parseInt(this.leaveTimes)+1;
    res.SignedDate= res.SignedDate.filter((x,i,s)=>s.indexOf(x)===i);
    res.SignedDate.forEach((item)=>{
      item=item.replace(/\//g,'-');
      item=item.replace(/-(\d)(?!\d)/g,'-0$1');
      this.signDateList.push(item);
    });
    res.ReSignedDate.forEach((item)=>{
      item=item.replace(/\//g,'-');
      item=item.replace(/-(\d)(?!\d)/g,'-0$1');
      this.reSignList.push(item);
    });
    this.$apply()
  }
  onShareAppMessage(res) {
    if (res.from === 'button') {
      // 来自页面内转发按钮
      console.log(res.target)
    }
    return {
      title: '每日膳膳签小程序',
      path: '/page/index'
    }
   }
   updateSignNum(){
    if(this.signForm=='sign'){
      this.signNum+=1;
      if(this.signNum==this.groupInfo.SignTimes){
        this.showBtn=''
      }
    }else if(this.signForm=='reSign')
      this.leaveTimes-=1;
      this.resigned=true
   }
  onShow(){
    this.pageIndex=1;
     this.loadMore=true;
     this.getData();
     this.loadList();
     this.dealNumber(this.myMomentsList);
    this.canSign();
    
  }
  onLoad(option){
    this.optionId=option.id;
    this.isManager=option.isManager;
    this.groupInfo=JSON.parse(option.groupInfo);
    this.me=Auth.getConfig('openId');
    this.nickName=JSON.parse(Auth.getConfig('userInfo')).nickName;
    this.avatarUrl=JSON.parse(Auth.getConfig('userInfo')).avatarUrl;
    this.onlyOpenID=option.openId;
    if(option.openId!=this.me){
      this.showMore=false;
      this.nickName=option.nickName;
      this.avatarUrl=option.avatarUrl;
    }
    this.signNum=parseInt(option.signNum);
    if(this.signNum==this.groupInfo.SignTimes){
      this.showBtn=''
    }else if(this.groupInfo.SignTimes>this.signNum){
      this.showBtn='0'
    }
    console.log(this.groupInfo.SignTimes>this.signNum)
    if(option.AllCanSee==true){
        this.AllCanSee=true
      }else {
        if(this.signNum!='-1'){
          this.AllCanSee=true
        }else{
          this.AllCanSee=false
        }
      }
    wepy.showShareMenu({
      withShareTicket: true
    })
  }
}
</script>
