<style lang="less" scoped>
@text-grey: #9F9F9F;
@btn-primary-color:#FF6F61;
.content-wrap{
    position: absolute;
    left:0rpx;
    right: 0rpx;
    top:94rpx;
}
.tab{
    border-top:1rpx solid rgba(221,221,221,1);
    font-size:28rpx;
    padding:20rpx 70rpx;
    line-height:50rpx;
    background:#fff;
    justify-content: space-around;
    text-align: center;
    .sub-title{
        padding-bottom:0rpx;
    }
    >view{
        width:50%;
        position: relative;
        &:first-child{
                 border-right:1rpx solid rgba(221,221,221,1);
            }
    }
}
    .content-view{
       .sub-text{
           padding:20rpx 40rpx;
           display: block;
           margin:0;
           text-align:left;
       }
        .textarea-input{
            position: relative;
             padding:20rpx 40rpx;
            background: #fff;
          margin-bottom: 60rpx;
            textarea{
                font-size:24rpx;
                color:#9F9F9F;
                width:100%;
                height:100rpx;
                box-sizing: border-box;
            }
           
        }
    }
 .bg-img-wrap{
      position: relative;
      width:100%;
      .btn-medium{
          position: absolute;
          left:50%;
          top:50%;
          margin:-30rpx 0 0 -146rpx;
          border-radius: 46rpx;
          line-height: 60rpx;
      }
  }
.form-section{
  margin-bottom:20rpx;
  position: relative;
  .textarea{padding-left:40rpx}
  .picker{
    padding-right:40rpx;
    width: 100%;
    text-align: left
  }
  .info-text, .input-row{
      color:#000;
  }
   .input-img.input-row{
      height:100rpx;
      padding:20rpx 40rpx;
    text-align: left;
    .section-title{
      float:left;
      color:#808080;
    }
    .qrcode-img{
      margin-left: 40rpx;
      height: 100%;
    }
    .iconfont{
      font-size:60px;
      line-height: 140rpx;
      padding-left:20rpx;
      float:left
    }
  }
 .textarea{
    height: 140rpx;
    width:100%;
    background: #fff;
    text-indent: 40rpx;
    padding:20rpx 0;
    font-size:28rpx;
    border-top:1rpx solid #f1f1f1;

  }
  .section{
    position: relative;
  }
  .input-row-right{
    .input-row{
      border-top:0
    }
  }
  .input-img.input-row{
     padding:20rpx 40rpx;
    text-align: left;
    .section-title{
      float:left;
      color:#808080;
    }
    .qrcode-img{
      margin-left: 40rpx;
      height: 200rpx;
    }
    .iconfont{
      font-size:120rpx;
      line-height: 140rpx;
      padding-left:20rpx;
      float:left
    }
  }
  .btn-mini{
    width:84rpx;
    height:36rpx;
    padding:0px;
    line-height: 32rpx;
    display: inline-block;
    border-radius: 24rpx;
    margin-left:20rpx;
    &.btn-outline{
      background: #fff;
      border:1rpx solid #707070;
      color:#808080
    }
  }
  .icon-check{
    height: 20px;
  }
  .iconfont.icon-xuanzhong{
    font-size:24px;
    color:@btn-primary-color;
    &.unchecked{
      color:@text-grey
    }
  }
  .label-right-text{
    padding-right:40rpx;
    font-size:24rpx;

  }

  .tag-row{
     padding:0 20rpx 20rpx 20rpx;
    line-height: 40rpx;
    // min-height: 80rpx;
    background: #fff;
    .btn-mini{
      width:auto;
      padding:0 12rpx;
    }
  }
  .icon-jiantou{
    position: absolute;
    right:40rpx;
    top:2rpx;
    font-size:40rpx;
  }
  .icon-jiantou3{
    font-size: 22px
  }
  .icon-bangzhu{
    font-size:36rpx;
    vertical-align:middle;
    color:#A2A2A2;
    margin-left:10rpx;
  }
}
.form-row{
    padding:20rpx 40rpx;
    background:#fff;
    line-height:50rpx;
    &.flex-form{
        flex-wrap:wrap;
    }
    .btn-mini{
        width:100rpx;
        height: 40rpx;
        line-height: 40rpx;
        margin:0rpx 0rpx 10rpx 0rpx;
       
    }

}
    .info-text{
        padding: 20rpx 40rpx;
        font-size:28rpx;
    }
    .set-text{
        padding: 0rpx 40rpx 20rpx;
        color:#808080;
        font-size:28rpx;
    }
  .section-title{
    font-size:28rpx;
    color:#000
  }

.btn-large{
  margin:-10rpx auto 60rpx auto
}
 .must-button{
    button{
      margin-left:16rpx
    }
  }
.sub-text.rules{
    margin:60rpx 0rpx 40rpx 0rpx;
}
</style>
<template>
<view style="height:100%">
<scroll-view scroll-y="true" style="height:100%">
     <view class="flex-form tab">
        <view class="{{showTab1===true?'':'sub-title'}}" data-id="0" @tap="changeTab"> 签到设置</view>
        <view  class="{{showTab1===true?'sub-title':''}}"  data-id="1" @tap="changeTab"> 下载数据</view>
    </view>
    <form wx:if="{{showTab1===true}}" class="content-wrap"  bindsubmit="saveFunc" report-submit='true'>
      <view wx:if="{{isManager=='true'}}">
        <view class="bg-img-wrap">
            <button @tap="changeBg" class="btn-medium">点击更换背景图</button>
            <image mode="aspectFill" style="width:100%;height:350rpx;display:block;" src="{{params.BackgroundURL}}"></image>
        </view>
        <view class="form-section">
          <view class="section ">
            <input  name="GroupTitle" value="{{params.GroupTitle}}" class="input-row" placeholder="填写签到标题" bindinput="fillTitle" bindblur="titleValidate"/>
          </view>
          <view class="section ">
               <textarea class="textarea" maxlength="-1"  placeholder="填写签到规则（选填）" value="{{params.SignRule=='null'?'':params.SignRule}}" bindinput="fillRules"/>
          </view>
          <view class="info-text">该签到的开始日期是{{params.BeginDate}}</view>
        </view>
        <view class="form-section  ">
          <view class="section flex-form input-row">
            <view class="section-title">设置签到持续日期</view>
            <view>
              <button  wx:for="{{radioBtn[1]}}" class="btn-mini {{item.btnStatus}}" data-index="1" data-id="{{item.id}}" @tap="setDate">{{item.text}}</button>
            </view>
          </view>
          <view class="section flex-form input-row" wx:if="{{radioBtn[1][0].btnStatus!=''}}">
            <view class="section-title">结束日期<!-- （持续{{groupInfo.Duration}}天） --></view>
            <view >
              <picker
                mode="date"
                value="{{params.EndDate}}"
                start="new Date()"
                end="2030-09-01"
                bindchange="bindDateChange1"> 
                  <view class="label-right-text">{{params.EndDate}}</view>
                  <view class=" iconfont icon-jiantou"></view>
              </picker>
            </view>
          </view>

        </view>
        <view class="form-section  ">
          <view class="section flex-form input-row">
            <view class="section-title">每天可签到时间</view>
            <view>
              <button  wx:for="{{radioBtn[0]}}" class="btn-mini {{item.btnStatus}}" data-id="{{item.id}}" data-index="0" @tap="setDate">{{item.text}}</button>
            </view>
          </view>
          <view class="section flex-form input-row" wx:if="{{radioBtn[0][0].btnStatus!=''}}">
            <view class="section-title">开始时间</view>
            <view>
              <picker
                mode="time"
                 name="BeginTime"
                value="{{params.BeginTime}}"
                start="00:00"
                end="23:59"
                bindchange="bindTimeChange1">
                <view class="label-right-text">{{params.BeginTime}}</view>
                <view class=" iconfont icon-jiantou"></view>
              </picker>
            </view>
          </view>
          <view class="section flex-form input-row" wx:if="{{radioBtn[0][0].btnStatus!=''}}">
            <view class="section-title">结束时间</view>
            <view>
              <picker
                  mode="time"
                  name="EndTime"
                  value="{{params.EndTime}}"
                   start="00:00"
                  end="23:59"
                  bindchange="bindTimeChange2">
                <view class="label-right-text">{{params.EndTime}}</view>
                <view class=" iconfont icon-jiantou"></view>
              </picker>
            </view>
          </view>
          <view class="section input-row  flex-form" >
            <view class="section-title">签到记录查看权限</view>
            <view>
                <picker bindchange="bindPickerChange" value="{{AuthIndex}}" range="{{viewArray}}">
                <view class="picker">{{pickedText}}</view>
                 <view class=" iconfont icon-jiantou"></view>
              </picker>
            </view>
          </view>
        </view>
        <view class="form-section input-row  flex-form" >
           <view class="section-title">是否允许成员申请补签</view>
           <view class=" iconfont icon-xuanzhong {{chooseIcon[1].checked?'':'unchecked'}}" @tap="reSignOpen" data-id="CanResign" data-checked="{{chooseIcon[1].checked}}"></view>
        </view>
        <view class="form-section  ">
            <view class="section flex-form input-row">
              <view class="section-title">选择签到必填项(至少一项)</view>
               <view class="must-button">
                <button  wx:for="{{tagBtn}}" class="btn-mini {{item.value=='1'?'':'btn-outline'}}" data-id="{{item.id}}" @tap="chooseTag">{{item.text}}</button>
              </view>
            </view>
        </view>
        <!-- <view class="form-section  ">
            <view class="section flex-form input-row">
              <view class="section-title">是否开启签到收费</view>
              <view class=" iconfont icon-xuanzhong {{chooseIcon[0].checked?'':'unchecked'}}" @tap="moneyOpen"  data-id="Money" data-checked="{{chooseIcon[0].checked}}"></view>
            </view>
            <view class="section flex-form input-row" wx:if="{{chooseIcon[0].checked}}">
              <view class="section-title">请设置金额</view>
               <view class="input-row-right">
               <input value="{{params.Money}}" name="Money" class="input-row" placeholder="请输入金额" bindinput="fillMoney" />
              </view>
            </view>
        </view> -->
         
        <view class="form-section  ">
            <view class="section flex-form input-row">
              <view class="section-title">高级选项功能</view>
              <view wx:if="{{collapse===true}}" class=" iconfont icon-jiantou-copy-copy-copy" @tap="collapseToggle"></view>
              <view wx:if="{{collapse===false}}" class=" iconfont icon-jiantou3" @tap="collapseToggle"></view>
            </view>
        </view>
        <view wx:if="{{collapse}}" class="form-section">
          <view class="section flex-form input-row" >
            <view class="section-title">每天可签到次数</view>
            <view >
              <picker bindchange="bindNumChange" value="{{params.SignTimes}}" range="{{signNumArr}}">
              <view class="picker">{{params.SignTimes}}</view>
              <view class=" iconfont icon-jiantou"></view>
            </picker>
            </view>
          </view>
      
          <view class="form-section  ">
            <view class="section input-row  flex-form" >
              <view class="section-title">是否开启BMI值计算</view>
              <view >
                  <view class=" iconfont icon-xuanzhong {{chooseIcon[3].checked?'':'unchecked'}}"  @tap="BMIOpen"  data-id="BMI" data-checked="{{chooseIcon[3].checked}}"></view>
                </view>
            </view>
            <view class="section input-row  flex-form" wx:if="{{chooseIcon[3].checked}}">
              <view class="section-title">请设置BMI值</view>
              <view class="input-row-right">
              <input value="{{params.BMI}}" name="BMI" class="input-row" placeholder="请输入BMI值"/>
              </view>
            </view>
          </view>
          <view class="form-section  ">
            <view class="section input-row  flex-form" >
              <view class="section-title">是否开启签到口令</view>
              <view >
                <view class=" iconfont icon-xuanzhong {{chooseIcon[4].checked?'':'unchecked'}}" @tap="openSignRule" data-id="ifCommand" data-checked="{{chooseIcon[4].checked}}"></view>
              </view>
            </view>
            <view class="section" wx:if="{{chooseIcon[4].checked}}">
              <input name="signToken" value="{{params.SignToken}}" class="input-row" placeholder="输入签到口令(20字以内)" bindinput="fillSignToken" />
            </view>
            <view class="section" wx:if="{{chooseIcon[4].checked}}">
              <input name="commandWay" value="{{params.commandCodeWay}}" class="input-row" placeholder="请提示如何获取口令,如关注公众号获取等" bindinput="fillCodeWay" />
            </view>
          </view>
          <view class="form-section  ">
            <view class="section input-row  flex-form" >
              <view class="section-title">选择签到报名信息</view>
              <view class=" iconfont icon-jiantou" @tap="chooseInfo"></view>
            </view>
            <view class="section " wx:if="{{params.Properties.Properties.length>0}}">
              <view class="section-title input-row">已选定的签到报名信息</view>
              <view class="tag-row "  >
                 <button  wx:for="{{params.Properties.Properties}}" class="btn-mini" >{{item.PropertyDescription?item.PropertyDescription:item}}</button>
              </view>
            </view>
          </view>
          <view class="form-section input-row  flex-form" >
            <view class="section-title">允许其他人转发签到<text class="iconfont icon-bangzhu"></text></view>
            <view class=" iconfont  {{chooseIcon[6].checked?'icon-xuanzhong':'icon-circle'}}" @tap="transmitCheck" data-id="CanTransmit" data-checked="{{chooseIcon[6].checked}}"></view>
          </view>
        </view>
      </view>
        <view wx:if="{{signNum!='-1'}}">
            <view class="set-text" wx:if="{{isManager=='true'}}">上面是修改整个签到的设置，下面是修改自己的</view>
            <view class="form-section input-row  flex-form" >
              <view class="section-title">签到名字</view>
              <view >
                  <input name="signName" value="{{info.SignName}}" class="input-row" placeholder="输入签到的名字" bindinput="fillSignName" />
              </view>
            </view>
            <view class="set-text">设置签到提醒（必须坚持签到才会收到提醒哦）</view>
            <view class="form-section  " >
              <view class="section input-row flex-form">

                <view class="section-title">是否开启签到提醒</view>
                <view class=" iconfont  {{chooseIcon[7].checked?'icon-xuanzhong':'icon-circle'}}" @tap="noticeOpen" data-id="ifSignNotice" data-checked="{{chooseIcon[7].checked}}"></view>
              </view>
              <view class="section input-row flex-form" wx:if="{{chooseIcon[7].checked}}">
                <view class="section-title">每天提醒时间</view>
                <view >
                    <picker
                    mode="time"
                    value="{{info.RemindTime=='null'?'07:00':info.RemindTime}}"
                    start="00:00"
                    end="23:59"
                    bindchange="bindTimeChange3">
                        <view class="label-right-text">{{info.RemindTime==null?'07:00':info.RemindTime}}</view>
                        <view class=" iconfont icon-jiantou"></view>
                    </picker>
                </view>
              </view>
              <view class="section " wx:if="{{chooseIcon[7].checked}}">
                  <view class="section-title  input-row">设置重复提醒</view>
                  <view class="form-row flex-form">
                    <button @tap="chooseNoticeDate"  wx:for="{{repeatNum}}" wx:key="{{item.text}}" class="btn-mini {{item.btnStatus}}" data-id="{{item.id}}">{{item.text}}</button>
                  </view>
                <view class=" form-row section-title" @tap="openNotice">关注「每日膳膳签」公众号接收提醒，点击查看</view>
              </view>
           </view>
           <view class="form-section input-row flex-form" >
               <view class="section-title">是否开启评论消息提醒</view>
              <view class=" iconfont  {{chooseIcon[8].checked?'icon-xuanzhong':'icon-circle'}}" @tap="commentOpen" data-id="ifCommandNotice" data-checked="{{chooseIcon[8].checked}}"></view>
               
           </view>
        </view>
      <text class="sub-text rules">确认即表示已同意《微信公众平台服务协议》</text>
      <button class="btn-large" form-type="submit">保存</button>
    </form>
    <view class="content-wrap">
       <view class="content-view" wx:if="{{showTab1===false}}"> 
          <text class="sub-text">复制下面的网址在电脑浏览器中打开…(仅限小组管理员)</text>
          <view class="textarea-input">
              <textarea value="{{url}}"  disabled maxlength='-1'/>
          </view>
          <button class="btn-large" @tap="copyTextUrl">一键复制网址</button>
       </view>
    </view>
</scroll-view>
</view>
</template>
<script>
  import wepy from 'wepy'
   import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'

  export default class settings extends wepy.page {
     config = {
      navigationBarTitleText: '修改设置'
    }

   data = {
     collapse:false,
    showTab1:true,
     groupInfo:{},
     info:{},
     isManager:false,
     AuthIndex:'',
     signNum:'',
     pickedText:'所有人可见',
     commentMust:false,
    signRuleMust:false,
     titleExsit:false,
     url:'http://www.qct-qiuqian.com:666',
     chooseIcon:[{
      'checked':false,
      'name':'Money'
     },{
      'checked':false,
      'name':'CanResign'
     },{
      'checked':false,
      'name':'SignForm'
     },{
      'checked':false,
      'name':'BMI'
     },{
      'checked':false,
      'name':'ifCommand'
     },{
      'checked':false,
      'name':'ifUseDetail'
     },{
      'checked':false,
      'name':'CanTransmit'
     },{
      'checked':false,
      'name':'ifSignNotice'
     },{
      'checked':false,
      'name':'ifCommandNotice'
     }],
     radioBtn:[
       [
         {'text':"永久",'id':'0','btnStatus':''},
         {'text':"自定义",'id':"1",'btnStatus':'btn-outline'}
       ],
       [
         {'text':"永久",'id':'0','btnStatus':''},
         {'text':"自定义",'id':"1",'btnStatus':'btn-outline'}
       ]

     ],
     tagBtn:[
         {'text':"文字",'id':'0','value':''},
         {'text':"图片",'id':"1",'value':''},
         {'text':"语音",'id':"2",'value':''}
     ],
     selectedReaptNum:[],
    repeatNum:[
       {'text':"星期一",'id':'1','btnStatus':'btn-outline'},
       {'text':"星期二",'id':"2",'btnStatus':'btn-outline'},
       {'text':"星期三",'id':"3",'btnStatus':'btn-outline'},
       {'text':"星期四",'id':"4",'btnStatus':'btn-outline'},
       {'text':"星期五",'id':"5",'btnStatus':'btn-outline'},
       {'text':"星期六",'id':"6",'btnStatus':'btn-outline'},
       {'text':"星期日",'id':"0",'btnStatus':'btn-outline'}
     ],
     signNumArr:Config.signNumPicker,
     viewArray:['所有人可见','仅签到小组成员可见'],
      params:{
       'signNum':1,
       'SignRule':'',
       'BeginDate':'',
       'EndDate':'',
       'BeginTime':'',
       'EndTime':'',
       'RemindTime':'06:00',
       'CanResign':'',
       'SignForm':'',
       'SignToken':'',
      //  'Money':0,
       'BMI':0,
       'AllCanSee':'',
       'SignTimes':'',
       'CanTransmit':'',
       'Properties':{'Properties':[

       ]},
     }
   }


   methods = {
    openNotice(){
      this.$navigate('./openNotice')
    },
    openSignRule(e){
      let dataId = e.currentTarget.dataset.id;
      this.changeBtnStatus(this.signRuleMust,dataId)
      // this.chooseIcon.forEach((i)=>{
      //   if(i.name==dataId){
      //     i.checked = !i.checked;
      //     i.checked? this.signRuleMust=true: this.signRuleMust=false;
      //   }
      // });
      this.$apply()
     },
       fillSignToken(e){
       this.params.SignToken=e.detail.value
     },
    //  moneyOpen(e){
    //   let dataId = e.currentTarget.dataset.id;
    //   this.chooseIcon.forEach((i)=>{
    //     if(i.name==dataId){
    //       i.checked = !i.checked;
    //       this.chooseIcon[0].checked= i.checked;
    //       if(!i.checked){
    //         this.params.Money=0
    //       }
    //     }
    //   });
    //     this.$apply()
    //  },
     noticeOpen(e){
      let dataId = e.currentTarget.dataset.id;
      this.changeBtnStatus(this.noticeMust,dataId)

      // this.chooseIcon.forEach((i)=>{
      //   if(i.name==dataId){
      //     i.checked = !i.checked;
      //      this.noticeMust=i.checked
      //   }
      // });
        this.$apply()
     },
     commentOpen(e){
      let dataId = e.currentTarget.dataset.id;
      this.changeBtnStatus( this.info.RemindComment,dataId)

      // this.chooseIcon.forEach((i)=>{
      //   if(i.name==dataId){
      //     i.checked = !i.checked;
      //     this.info.RemindComment=i.checked;
          
      //   }
      // });
        this.$apply()
     },
     BMIOpen(e){
      let dataId = e.currentTarget.dataset.id;
      
      this.chooseIcon.forEach((i)=>{
        if(i.name==dataId){
          if(!i.checked){
            let weight=0;
            let height=0;
             this.params.Properties.Properties.forEach((item)=>{
              if(item.PropertyName=='Weight'){
                weight=1
              }
            });
             this.params.Properties.Properties.findIndex((item)=>{
               if(item.PropertyName=='Height'){
                 height=1
               }
            });
            if(height==0||weight==0){
              Tips.toast('开启BMG需要先在报名信息中添加身高和体重','none');
              return 
            }else{
               i.checked = !i.checked;
                this.chooseIcon[3].checked=i.checked;
                if(!i.checked){
                  this.params.BMI=0
                }
              }
            } else {
            i.checked = !i.checked;
            this.chooseIcon[3].checked=i.checked;
            if(!i.checked){
              this.params.BMI=0
            }
          }
        }
      });
        this.$apply()
     },
     transmitCheck(e){
        let dataId = e.currentTarget.dataset.id;
      this.changeBtnStatus(this.params.CanTransmit,dataId)

        // this.chooseIcon.forEach((i)=>{
        // if(i.name==dataId){
        //   i.checked = !i.checked;
        //   this.params.CanTransmit=i.checked
        // }
      // });
      this.$apply()
     },
     async titleValidate(e){
      if(e.detail.value=='')return;
      let res = await Config.isExist({'GroupTitle':e.detail.value});
      this.titleExsit=res;
      if(res===true){
        Tips.toast('签到名称已存在','none');
        return
      }
     },
    reSignOpen(e){
      let dataId = e.currentTarget.dataset.id;
      this.changeBtnStatus(this.params.CanResign,dataId)

      // this.chooseIcon.forEach((i)=>{
      //   if(i.name==dataId){
      //     i.checked = !i.checked;
      //     this.params.CanResign=i.checked;
      //   }
      // });
        this.$apply()
     },
    changeTab(event){
        if(event.currentTarget.dataset.id=='0'){
          this.showTab1=true;
        } 
         if(event.currentTarget.dataset.id=='1'){
          this.showTab1=false;
        }
    },
    changeBg(event){
      const that = this;
      Tips.chooseImage('1',['album','camera']).then( (res)=>{
         wx.uploadFile({
          url:Config.baseUrl+'/group/img?GroupID='+this.optionId,
          filePath: res.tempFilePaths[0],
          name: 'files[]',
          success: (res) => {
            console.log()
            that.params.BackgroundURL = res.data.replace(/\"/g,"");
             that.$apply();
          }
        });
       
      }).catch(err => {
        console.info( 'actionSheet---error---'+err );
      });
    },
     setDate(event){
       let index=event.currentTarget.dataset.index;
       let id=event.currentTarget.dataset.id;
       this.radioBtn[index].forEach(item => {
         item.btnStatus='btn-outline';
         if(item.id==event.currentTarget.dataset.id){
           item.btnStatus=''
         }
       });
     },
      bindNumChange(e){
        this.params.SignTimes=parseInt(e.detail.value)+1;
      },
      bindPickerChange(e) {
        this.AuthIndex=e.detail.value;
        if(this.AuthIndex=='0'){
          this.params.AllCanSee=true;
          this.pickedText='所有人可见'
        }else{
          this.params.AllCanSee=false;
          this.pickedText='仅签到小组成员可见'
        }
      },
      bindTimeChange1(e){
        this.params.BeginTime=e.detail.value
      }, 
      fillSignName(e){
        this.info.SignName=e.detail.value;
      },
      bindTimeChange2(e){
        this.params.EndTime=e.detail.value
      },
      bindTimeChange3(e){
        this.info.RemindTime=e.detail.value
      },
      bindDateChange1(e){
       
        if(new Date(e.detail.value).getTime()<new Date(this.params.BeginDate).getTime()){
          Tips.toast('签到结束日期需大于开始日期','none');
          return false
        }else if(new Date(e.detail.value).getTime()<Config.today()){
           Tips.toast('签到结束日期需大于当前日期','none');
           return false
        }else{
           this.params.EndDate=e.detail.value;
        }
        // this.params.EndDate=e.detail.value
      },
      fillRules(e){this.params.SignRule = e.detail.value},
      fillTitle(e){this.params.GroupTitle = e.detail.value},
      chooseTag(event){
       let id=event.currentTarget.dataset.id;
       this.tagBtn.forEach(item => {
         if(item.id==id){
           item.value=='0'?item.value='1':item.value='0'
         }
       });
        this.$apply()

     },
    chooseInfo(e){
      wx.navigateTo({url:'./chooseSignInfo?Properties='+JSON.stringify(this.params.Properties)});
    },
   collapseToggle(){
     this.collapse = !this.collapse
   },
    copyTextUrl(){
      const that=this;
      wx.setClipboardData({
        data: that.url,
        success: function (res) {
          wx.showToast({
            title: '复制成功',
          });
        }
      });
     },
     chooseNoticeDate(event){
       this.repeatNum.forEach((item) => {
        if(item.id==event.currentTarget.dataset.id){
            if( item.btnStatus=='btn-outline'){
              item.btnStatus='';
              this.selectedReaptNum.push(item.id)
            }else{
              item.btnStatus='btn-outline';
              this.selectedReaptNum.splice(this.selectedReaptNum.findIndex(sbitem=>sbitem==event.currentTarget.dataset.id),1)
            }
          }
        });
     },
  
     
    async saveFunc(e){
      let value=e.detail.value;
      if(this.params.IsManage!=false){
        if(value.GroupTitle==''){
           Tips.toast("请输入签到标题",'none');
           return
        }else if(!this.params.Properties.Properties){
           Tips.toast("请选择签到报名信息",'none');
           return
         }
         else if(this.signRuleMust===true&&value.SignToken==''){
           Tips.toast("请输入签到口令",'none');
           return
         }
        else if(this.chooseIcon[3].checked===true&&value.BMI==''){
           Tips.toast("请输入BMI值",'none');
           return
         }
         else if(this.chooseIcon[3].checked===true){
          let weight=0;
          let height=0;
          this.params.Properties.Properties.forEach((item)=>{
          if(item.PropertyName=='Weight'){
            weight=1
          }
          });
          this.params.Properties.Properties.findIndex((item)=>{
            if(item.PropertyName=='Height'){
              height=1
            }
          });
          if(height==0||weight==0){
            Tips.toast('开启BMG需要先在报名信息中添加身高和体重','none');
            return  
          }
       }
        //  else if(this.chooseIcon[0].checked===true&&value.Money==''){
        //    Tips.toast("请输入收费金额",'none');
        //    return
        //  }
        // else if(this.chooseIcon[0].checked===true&&parseFloat(value.Money)-0.01>0){
        //    Tips.toast("金额应该大于0",'none');
        //    return
        //  }
         else if(this.titleExsit===true){
            Tips.toast("小组名称已存在",'none');
           return
         }else if(this.params.SignForm=='000'){
             Tips.toast('签到形式至少选择一项','none');
             return
         }else{
           if(this.radioBtn[1][0].btnStatus==''){//如果是永久，则结束日期从当天往后推迟5年
             this.params.EndDate=Config.fiveYearsLater();
            }
           //签到必填项
           let form=[];
           this.tagBtn.forEach((item)=>{
               form.push(item.value);
            });
           this.params.SignForm=form.join('').replace(/,/g,'');
           this.params.EndDate= this.params.EndDate.replacee(/\//g, '-')
            console.log('this.params.EndDate---=====>>>>>'+this.params.EndDate)
            let params={
              'BeginDate':this.params.BeginDate+' '+this.params.BeginTime,
              'EndDate':this.params.EndDate+' '+this.params.EndTime,
              'BeginTime':this.params.BeginDate+' '+this.params.BeginTime,
              'EndTime':this.params.EndDate+' '+this.params.EndTime,
              'SignForm':this.params.SignForm,
              'SignToken':this.params.SignToken?this.params.SignToken:'',
              'PropertiesStr':JSON.stringify({'Properties':this.params.Properties.Properties}),
            };
           params = Object.assign({},this.params,params);
           await Config.updateGroup(params);
          }
        }
        let userParams={
           OpenID:Auth.getConfig("openId"),
           GroupID:this.params.GroupID,
           SignName:this.info.SignName,
           RemindSign:this.chooseIcon[7].checked,
           RemindTime:this.info.RemindTime,
           RemindDay:this.selectedReaptNum.toString(),
           RemindComment:this.chooseIcon[8].checked
        };
        if(this.signNum!='-1'){
          let userResult= await Config.userSetting(userParams);
        };
        Tips.toast('修改成功');
         let pages = getCurrentPages();
        let prevPage = pages[pages.length - 2]; 
        setTimeout(()=>{
          Auth.backOpener({},()=>{
             prevPage.initData();
          })
        },500)

       }
   }
  async initData(){
     this.data.chooseIcon.forEach((item)=>{
      //  if(item.name=='Money'){
      //     this.params.Money>0?item.checked=true:item.checked=false;
      //     this.params.Money>0?this.chooseIcon[0].checked=true:this.chooseIcon[0].checked=false;
      //  }
       if(item.name=='CanTransmit'){//是否可以转发
          item.checked=this.params.CanTransmit
       }
  
       if(item.name=='CanResign'){
          item.checked=this.params.CanResign
       }
       if(item.name=='BMI'){
          this.params.BMI>0?item.checked=true:item.checked=false;
          // this.params.BMI>0?this.chooseIcon[3].checked=true:this.chooseIcon[3].checked=false;
       }
       if(item.name=='ifCommand'){//签到口令
          this.params.SignToken!='null'?item.checked=true:item.checked=false
       }
  
     });
      let start = new Date(this.params.BeginDate).getTime();
      let end = new Date(this.params.EndDate).getTime();
      if(parseInt(end)-parseInt(start)>160704000000){
        this.radioBtn[1][0].btnStatus='';
        this.radioBtn[1][1].btnStatus='btn-outline';
      }else{
        this.radioBtn[1][0].btnStatus='btn-outline';
        this.radioBtn[1][1].btnStatus='';
      }
      this.params.SignForm=this.params.SignForm.split('');
      this.data.tagBtn.forEach((item,index)=>{
        this.data.tagBtn[index].value=this.params.SignForm[index];
      })
      this.params.AllCanSee=='true'?this.data.pickedText='所有人可见':this.data.pickedText='仅签到小组成员可见';
      if(this.params.BeginTime!='00:00:00'|| this.params.EndTime!='23:59:00'){
        this.radioBtn[0][0].btnStatus='btn-outline';
        this.radioBtn[0][1].btnStatus='';
      }else{
        this.radioBtn[0][0].btnStatus='';
        this.radioBtn[0][1].btnStatus='btn-outline';
      } 
      this.params.EndDate = this.params.EndDate.replace(/\.|\-/g, '/')
      this.params.RemindTime = this.params.RemindTime.replace(/\.|\-/g, '/')
      this.params = Object.assign({}, this.params,this.groupInfo);
          
        //  this.$apply();
  }
  async infoData(){
   //个人签到设置内容
    this.info=await Config.getUserSetting({'OpenID':Auth.getConfig("openId"),'GroupID':this.params.GroupID});
    //重复提醒时间
    this.chooseIcon[7].checked=this.info.RemindSign;
    this.chooseIcon[8].checked=this.info.RemindComment;
    if(this.info.RemindDay){
      this.selectedReaptNum=this.info.RemindDay.split('');
      this.repeatNum.forEach((item)=>{
          this.selectedReaptNum.forEach((sbItem)=>{
            if(item.id==sbItem){
              item.btnStatus=''
            }
          })
      })
    } 
    this.$apply()
  }
      
  changeBtnStatus(param,dataId){
     this.chooseIcon.forEach((i)=>{
        if(i.name==dataId){
          i.checked = !i.checked;
         param=i.checked;
        }
      });
  }
   onShow(){
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];
    this.params.Properties.Properties=currPage.data.params.Properties.Properties;
  }
   onLoad(option){
    this.optionId=option.id;
    this.signNum=option.signNum;
    this.params=JSON.parse(option.groupInfo);
    this.isManager=option.isManager;
    this.infoData();
    if(this.isManager!=false||this.params.OpenID==Auth.getConfig('openId')){
      this.initData();
    };
   
    let length = this.getCurrentPages().length;
    if(this.getCurrentPages()[length-2].route=="pages/chooseSignInfo"){
      this.collapse=true;
    }
  }
}
</script>
