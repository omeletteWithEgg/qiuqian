<style lang="less" scoped>
    // @import "../style/app.less";
    @btn-primary-color:#FF6F61;
    .container-share{
        position:relative;
        margin:0rpx 40rpx 40rpx 40rpx;
        border-radius:12rpx 12rpx 0 0 ;
        padding:30rpx 20rpx;
        height:740rpx;
        background:#fff;
    }
    .top-view{
        padding: 28rpx 40rpx;
        .sub-title{
            padding-bottom: 0px;
        }
    }
     .canvas{
        width:100%;
        height:100%;
        backgroud:#fff
    }
    
    .user-info{
        padding-bottom:40rpx;
        border-bottom:1rpx solid rgba(240,240,240,1);
        text-align: center;
        line-height: 40rpx;
        .user{
            color:@btn-primary-color;
            font-size: 38rpx;
        }
        .date{
            font-size:28rpx;
            color:#9F9F9F
        }
    }
    .share-content{
        text-align:center;
        padding-top:40rpx;
        .tip-text{
           padding-bottom:20rpx
        }
           
    }
</style>
<template>
    <view style="height:100%">
        <view class="flex-form top-view">
            <view class="btn-round disabled" @tap="back">返回</view>
            <!-- <view class="sub-title" @tap="changeBg">换一换</view> -->
            <view class="btn-round" @tap="download">保存</view>
        </view>
        <view class="container-share">
             <canvas class="canvas" canvas-id="canvasBg" >
            </canvas>
                
        </view>
        <view class="sub-title">如生成分享图失败，请返回刷新或多试几次~</view>
    </view>
</template>
<script>
 import wepy from 'wepy';
  import Auth from '../utils/auth'
  import Config from '../utils/config'

  export default class wxCodeShare extends wepy.page {
     config = {
      navigationBarTitleText: '二维码分享'
    }
    

    data={
        date:'',
        shareTitle:'',
        QRcodeImg:'',
        canvasWidth:'',
        canvasHeight:''
    }

    methods={

        download () {
            // 导出图片
            Auth.saveImage(this.QRcodeImg);
        },
        back(){
            wx.navigateBack({
                 delta: 1
            })
        },
    }

    drawImage(){
        const that = this
       const QrImg= Auth.getImageInfo(this.QRcodeImg);
       Promise.all([QrImg]).then(([res])=>{
        console.log('res.path---'+res.path);
      
        const rpx=Auth.createRpx2px();
        const context = wx.createCanvasContext('canvasBg');

        this.canvasWidth=rpx(320*2);
        this.canvasHeight=rpx(320*2);
        context.setFillStyle('white')
        context.fillRect(0, 0, this.canvasWidth+40, 370)
        context.drawImage(res.path,40,50,this.canvasWidth-rpx(80*2),this.canvasHeight-rpx(80*2));
         context.setFontSize(rpx(18 * 2));
        context.setFillStyle('#08c');  
       Auth.dealWords({
            ctx: context,//画布上下文
            fontSize: 16,//字体大小
            word: this.shareTitle,//需要处理的文字
            maxWidth: this.canvasWidth-30,//一行文字最大宽度
            x: 10,//文字在x轴要显示的位置
            y: 10,//文字在y轴要显示的位置
            maxLine: 2//文字最多显示的行数
        })
         context.setFontSize(rpx(14 * 2));
        context.setFillStyle('#505050');
       context.setTextAlign('center')
        context.fillText(
            '长按或扫码进入',
           this.canvasWidth/2,
           this.canvasHeight+20
        );
        context.setFillStyle('#9f9f9f');
        context.fillText(
            '微信小程序：每日膳膳签',
            this.canvasWidth/2,
            this.canvasHeight+40
        );
       
         context.draw(false, () => {
            wx.showLoading('图片生成中...')
            wx.canvasToTempFilePath({
                x: 0,
                y: 0,
                width: this.canvasWidth,
                height: this.canvasHeight+100,
                destWidth: this.canvasWidth,
                destHeight: this.canvasHeight+100  ,
                canvasId: 'canvasBg',
                success(res) {
                    that.QRcodeImg= res.tempFilePath 
                     wx.hideLoading()
                },
                fail(res){
                     wx.hideLoading()
                    Tips.toast(res.errMsg,'none')
                }
            })
        
          })
       })

    }
    async onLoad(option){
        this.shareTitle=option.groupTitle;
        this.date=option.date;
        this.QRcodeImg =await Config.getWXCode(option.id);
        this.drawImage()
        this.$apply()
    }
  }
</script>
