<style lang="less" scoped>
    .top-view{
        padding-top:40rpx;
        background: #fff;
        border-bottom:20rpx solid rgb(233, 233, 233);
        .picker.btn-outline-mini{
            width: 79px;
            margin-left: 20px;
            .picker-view{
                display: flex;
            }
        }
        .flex-form{
            padding:20rpx 40rpx;
            &.tag{justify-content:left}
            &.tab{
                 border-top:1rpx solid rgb(233, 233, 233);
                  font-size:24rpx;
                  padding:20rpx 70rpx;
                  line-height:50rpx;

                  >view:first-child{
                      border-right:1rpx solid rgb(233, 233, 233);
                      width:50%;
                  }
            }
            .btn-outline-mini,.btn-mini{
                margin-right: 20rpx;
                display: inline-block;
               
            }
            .btn-mini{
                border-radius: 24rpx;
            }
           
        }
    }
    .list-view{
        background: #fff;
        color:#505050;
        font-size:24rpx;
        >view{
             padding: 20rpx 40rpx;
            border-bottom: 1rpx solid rgb(233, 233, 233);
        }
         .flex-form{
              .icon-xingxing{
                vertical-align: middle;
                color:#505050;
            }
             &:first-child .icon-xingxing{
                color:#FF6F61
            }
            &:nth-child(2) .icon-xingxing{
                color:rgba(255,111,97,0.8)
            }
            &:nth-child(3) .icon-xingxing{
                color:rgba(255,111,97,0.6)
            }
            .tip-text{
                display:inline-block;
                text-align:center;

            }
         }
    }
    .blank-center{padding-top:60rpx}
</style>
<template>
<view>
       
        <view class="top-view">
            <picker class="btn-outline-mini picker"   bindchange="bindPickerChange" value="{{pickerIndex}}" range="{{array}}" >
                <view class="picker-view">
                     {{rangkingType}}
                    <view class="iconfont icon-jiantouarrow486"></view>

                </view>
            </picker>
            <view class="flex-form tag">
                     <text  wx:for="{{radioBtn}}" class="{{item.btnStatus}}" data-id="{{item.id}}" @tap="changeRankType">{{item.text}}</text>
            </view>
            <view class="flex-form tab">
                <view class="tabCls {{item.class}}" data-id="{{item.text}}"  @tap="changeTab" wx:for="{{tab}}"> {{item.text}}（{{item.num?item.num:'0'}}人）</view>
            </view>
        </view>
        <view class="list-view" wx:if="{{rankingList.length>0}}">
            <view wx:for="{{rankingList}}" class="flex-form">
                <view class="" @tap="toDetailPage" data-item="{{item}}">
                    <text class="iconfont icon-xingxing" wx:if="{{index<3&&starNoShow}}"></text>
                    <text class="tip-text" wx:if="{{index<3&&!starNoShow}}" style="width:38rpx">{{index+1}}</text>

                    <text class="tip-text" wx:if="{{index>2}}" style="width:38rpx">{{index+1}}</text>
                    <image type="scaleToFill" style="width:44rpx;height:44rpx;border-radius:100%;margin:0 20rpx;vertical-align:middle;" src="{{item.avatarUrl}}"></image> 
                    <text class="user">{{item.NickName}}</text> 
                </view>
                <view class="tip-text">累计{{item.TotolTimes}}次</view>
            </view>
        </view>
            <view wx:else class="blank-center sub-title">暂无数据</view>
         
</view>
</template>
<script>
 import wepy from 'wepy';
  import Auth from '../utils/auth'
  import Config from '../utils/config'
  import Tips from '../utils/tip'


  export default class rankingList extends wepy.page {
     config = {
      navigationBarTitleText: '排行榜'
    }
   
    data={
        list:{},
        tabIndex:'1',
        pickerIndex:0,
        array:[
         '按签到次数排名',
         '按签到名字排名'
        ],
        starNoShow:true,
        rangkingType:'按签到次数排名',
        ifChoosed:'btn-outline-mini ',
        tab:[
            {'text':'已签到','num':'','class':''},
            {'text':'未签到','num':'','class':'tip-text'}
        ],
        radioBtn:[
         {'text':"今日",'id':'1','btnStatus':'btn-mini'},
         {'text':"昨日",'id':"-1",'btnStatus':'btn-outline-mini '},
         {'text':"总榜",'id':"0",'btnStatus':' btn-outline-mini'}
        ],
        rankingList:[],
        sort:'1',
        rank:'SignedRank'
    }
    staticData={
         optionId:'',
         signNum:'',
         groupInfo:{},
         userSetting:{}
    }
    methods = {
        toDetailPage(e){
            const item = e.currentTarget.dataset['item'];
             this.$navigate('./myRecords?id='+this.staticData.optionId+'&userInfo='+JSON.stringify(this.staticData.userSetting)+'&signNum='+this.staticData.signNum+'&isManager=false&groupInfo='+JSON.stringify(this.staticData.groupInfo)+'&openId='+item.OpenID+'&nickName='+item.NickName+'&avatarUrl='+item.avatarUrl)
        },
        bindPickerChange(e){
            if(e.detail.value=='0'){
                this.rangkingType='按签到次数排名'
                this.sort = '1'
                this.$apply();
            }else{
                 this.sort = '2'
                this.rangkingType='按签到名字排名'
            }
                this.$apply()
                this.initData(this.sort)

        },
        changeTab(event){
            this.tab.forEach((item)=>{
                if(item.text==event.currentTarget.dataset.id){
                    item.class=''
                }else{
                     item.class='tip-text'
                }
                if(item.text=='未签到'){
                    this.starNoShow = false;
                }else{
                    this.starNoShow = true;
                }
            });
            if(event.currentTarget.dataset.id=='已签到'){
                 this.rank='SignedRank'

            }
            if(event.currentTarget.dataset.id=='未签到'){
                 this.rank='UnSignedRank'

            }
            if(event.currentTarget.dataset.id=='累计排行榜'){
                 this.rank='TotalSignedRank'

            }
            if(event.currentTarget.dataset.id=='累计连续排行榜'){
                 this.rank='ContinueSignedRank'
            }
             this.initData(this.sort);
        },
        changeRankType(event){
            this.starNoShow = true;

            this.tabIndex=event.currentTarget.dataset.id;
            this.tab[0].class='';
            this.tab[1].class='tip-text';
            this.radioBtn.forEach(item => {
                item.btnStatus='btn-outline-mini';
                if(item.id== this.tabIndex){
                     item.btnStatus='btn-mini';
                    if(this.tabIndex!='0'){
                        this.rank='SignedRank'

                        this.tab[0].text='已签到'
                        this.tab[1].text='未签到'
                    }else{
                        this.rank='TotalSignedRank'

                        this.tab[0].text='累计排行榜'
                        this.tab[1].text='累计连续排行榜';
                        
                    }
                        this.initData(this.sort);

                }
            });
        },
        
       
    }

    async initData(sort){
        let param={
            'GroupID':this.staticData.optionId,
            'day':this.tabIndex,
            'sort':sort
        }
        this.list=await Config.rangkingList(param);
        if(this.rank=='TotalSignedRank'||this.rank=='ContinueSignedRank'){
            this.list.TotalSignedRank=='null'?this.tab[0].num=0:this.tab[0].num=this.list.TotalSignedRank.length;
            this.list.ContinueSignedRank=='null'?this.tab[1].num=0:this.tab[1].num=this.list.TotalSignedRank.length;
        }else{
            this.tab[0].num=this.list.SignedNumber;
            this.tab[1].num = this.list.UnSignedNumber;
        }
        this.rankingList = this.list[this.rank];
        this.$apply();
    }

    onLoad(option){
        this.staticData.optionId=option.id;
        this.staticData.signNum=option.signNum;
        this.staticData.groupInfo=JSON.parse(option.groupInfo)
        this.staticData.userSetting=JSON.parse(option.userInfo)

        this.initData(this.sort);
    }
}

 
  
</script>
