<style lang="less" scoped>
    // @import "../style/app.less";
    .container-share{
        position:relative;
        margin:0rpx 40rpx 40rpx 40rpx;
        border-radius:12rpx 12rpx 0 0 ;
        padding:30rpx 20rpx;
        height:880rpx;
        background:#fff;
        .canvas{
            width:100%;
            height:100%;
        }
       
    }
    .top-view{
        padding: 28rpx 40rpx;
        .sub-title{
            padding-bottom: 0px;
        }
    }
    
    .user-info-container{
        position: absolute;
        bottom:0rpx;
        left: 30rpx;
        right:30rpx;
    }
    .user-info{
        padding-bottom:40rpx;
        border-bottom:1rpx solid rgba(240,240,240,1);
        text-align: center;
        line-height: 40rpx;
        .user{
            color:#505050;
            padding:10rpx 0;
        }
        .date{
            font-size:12px;
            color:#9F9F9F
        }
    }
    .share-content{
        align-items:stretch;
        padding-top:40rpx;
        .share-text{
            color:#505050;
            font-size:14px;
            >text{
                display: block;
                position: relative;
                &.tip-text{
                    position: absolute;
                    bottom:0rpx;
                }
            }
           
        }
    }

        
</style>
<template>
    <view style="height:100%">
        <view class="flex-form top-view">
            <view class="btn-round disabled" @tap="back">返回</view>
            <view class="btn-round" @tap="download">保存</view>
        </view>
        <view class="container-share">
            <canvas class="canvas" canvas-id="canvasBg" >
               
            </canvas>
        </view>
        <view class="sub-title">如生成分享图失败，请返回刷新或多试几次~</view>

    </view>
</template>
<script>
 import wepy from 'wepy';
  import Auth from '../utils/auth'
  import Config from '../utils/config'
 import Tips from '../utils/tip';

  export default class shareImage extends wepy.page {
     config = {
      navigationBarTitleText: '保存图片分享'
    }
    

    data={
        userName:'',
        pageData:{},
        type:'',
        bgSrc:'',
        shareTitle:'',
        userImg:'',
        QRcodeImg:'',
        canvasWidth:'',
        canvasHeight:''
    }

    methods={
        download () {
            // 导出图片
            Auth.saveImage(this.bgSrc);
        },
        back(){
            wx.navigateBack({
                 delta: 1
            })
        },

    }
    createRpx2px() {
      const { windowWidth } = wx.getSystemInfoSync()

      return function(rpx) {
        return windowWidth / 750 * rpx
      }
    }


    drawCanvas(){

        // 获取头像图像信息 
        const that=this;
        const avatar = this.userImg;
        const bgImage = this.bgSrc;
        const shareTitle = this.shareTitle;
        const avatarPromise = Auth.getImageInfo(avatar)
        const codePromise = Auth.getImageInfo(this.QRcodeImg)
    
        // 获取背景图像信息
        const backgroundPromise = Auth.getImageInfo(bgImage);
        Promise.all([avatarPromise,backgroundPromise,codePromise])
          .then(([avatar,background,QRcode]) => {
           
            const rpx2px = Auth.createRpx2px();
            const context = wx.createCanvasContext('canvasBg');
            this.canvasWidth = rpx2px(320 * 2);
            this.canvasHeight = rpx2px(250 * 2);
              context.setFillStyle('white')
            context.fillRect(0, 0, this.canvasWidth+40, 500)
                context.drawImage(background.path, 0, 0, this.canvasWidth, this.canvasHeight);
            const avatarWidth = rpx2px(60 * 2)
            const avatarHeight = rpx2px(60 * 2)
            const avatarTop = rpx2px(250 * 2)
            let signTimes='恭喜你已签到'+shareTitle+'次'
             // 绘制用户名
            context.setFontSize(rpx2px(16 * 2))
            context.setFillStyle('#fff')
           Auth.dealWords({
            ctx: context,//画布上下文
            fontSize: 16,//字体大小
            word: '#'+that.pageData.title+'#',//需要处理的文字
            maxWidth: this.canvasWidth-40,//一行文字最大宽度
            x: 20,//文字在x轴要显示的位置
            y: this.canvasHeight - rpx2px(150 * 2),//文字在y轴要显示的位置
            maxLine: 2//文字最多显示的行数
        })
             context.setFontSize(rpx2px(12 * 2))
             context.setTextAlign('center')
            context.fillText(
              that.pageData.date,
              this.canvasWidth / 2,
              this.canvasHeight - rpx2px(160 * 2)
            )
            context.setFillStyle('#505050')  
            context.fillText(
              that.userName,
              this.canvasWidth / 2,
              avatarTop + rpx2px(55 * 2)
            ) 
            context.setTextAlign('left')
            context.setFontSize(rpx2px(16 * 2))
            context.setFillStyle('#08c')  
              if(that.type!='notice'){
                context.fillText(
                  signTimes,
                   rpx2px(15 * 2),
                  this.canvasHeight +rpx2px(140 * 2)
                )
            }
           
            context.setFontSize(rpx2px(10 * 2))
            context.setFillStyle('#9f9f9f')  
            context.fillText(
              '微信小程序：每日膳膳签',
              rpx2px(15 * 2),
              this.canvasHeight + rpx2px(180 * 2)
            )
            context.drawImage(QRcode.path,this.canvasWidth-rpx2px(110*2),this.canvasHeight+rpx2px(100*2),rpx2px(84*2),rpx2px(84*2))
            context.arc(this.canvasWidth / 2 ,  this.canvasHeight , avatarWidth/2, 0, 2 * Math.PI)
            context.clip()
            context.drawImage(avatar.path,this.canvasWidth / 2 - avatarWidth / 2, avatarTop - avatarHeight / 2,avatarWidth,avatarHeight)
           
            // 完成作画
            context.draw(false, () => {
                wx.showLoading('图片生成中...')
                wx.canvasToTempFilePath({
                    x: 0,
                    y: 0,
                    width: this.canvasWidth,
                    height: this.canvasHeight+100,
                    destWidth: this.canvasWidth,
                    destHeight: this.canvasHeight+100 ,
                    canvasId: 'canvasBg',
                    success(res) {
                        that.bgSrc= res.tempFilePath 
                        wx.hideLoading()
                    },
                    fail(res){
                        wx.hideLoading()
                        Tips.toast(res.errMsg,'none')
                    }
                })
         
            })
            
        }).catch(error=>{
             Tips.toast(error.errMsg,'none')
          console.log('drawImage======='+JSON.stringify(error))
        })
        wx.hideLoading()
    }
   
    async onLoad(option){
        this.pageData=option ;
        this.bgSrc=option.bgImg ;
        this.type=option.type ;
        this.userName=JSON.parse(Auth.getConfig('userInfo')).nickName;
        this.userImg=Auth.getConfig('avatarUrl');
        this.QRcodeImg =await Config.getWXCode(option.id);
       
        let params={
            'OpenID':Auth.getConfig("openId"),
            'GroupID':option.id
        }
        if(option.type!='notice'){
            let res=await Config.signedRecord(params);
            this.shareTitle=res.TotalSignTimes;
        }
        this.drawCanvas();
        this.$apply()
    }
  }
</script>
